{"version":3,"file":"ud-element.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"wQAQqBA,EAAAA,SAAAA,I,6BACjB,aAAc,6BACV,gBAEKC,MAAQ,CACTC,QAAQ,GAJF,E,qCAQd,SAAOC,GACH,OAAW,MAAPA,IAEW,MAAXA,EAAI,KACJA,EAAMA,EAAIC,UAAU,EAAGD,EAAIE,OAAS,IAGxB,6EACCC,KAAKH,M,gCAG1B,WACSI,KAAKC,OAAOD,KAAKE,MAAMC,MACxBH,KAAKI,YAAcC,IAAAA,UAAiBL,KAAKE,MAAMC,GAAIH,KAAKM,gBAAgBC,KAAKP,U,6BAIrF,SAAgBQ,EAAWC,GACJ,kBAAfA,EAAMC,OACgB,SAAlBV,KAAKE,MAAMS,KACKC,EAAE,IAAD,OAAKZ,KAAKE,MAAMC,KACvB,GAAGU,cAAcC,SAE/Bd,KAAKe,SAAS,CACVpB,QAAQ,O,gCAKpB,WACQK,KAAKN,MAAMC,QAA8B,MAApBK,KAAKI,aAC1BC,IAAAA,YAAmBL,KAAKI,e,kCAIhC,WAC4B,MAApBJ,KAAKI,aACLC,IAAAA,YAAmBL,KAAKI,e,oBAIhC,WACI,OAAIJ,KAAKN,MAAMC,OACJ,KAEJ,gBAACqB,EAAD,eAAkBC,IAAKjB,KAAKE,MAAMC,IAAQH,KAAKE,Y,EAtDzCT,CAAkByB,EAAAA,WA0DjCF,EAAAA,SAAAA,I,6BACF,WAAYd,GAAO,6BACf,cAAMA,IAEDR,MAAQ,CACTyB,QAASjB,EAAMiB,QACfR,IAAKT,EAAMS,IACXS,WAAYlB,EAAMkB,WAClBC,OAAQnB,EAAMmB,OACdC,SAAS,EACTC,UAAU,EACVC,aAAc,IAVH,E,uCAcnB,YACIC,EAAAA,EAAAA,IAAS,mCAAqCzB,KAAKE,MAAMC,GAAI,SAAUuB,GAC/DA,EAAKC,MACL3B,KAAKe,SAAS,CACVQ,UAAU,EACVC,aAAcE,EAAKC,MAAMC,UAKjC5B,KAAKe,SAAS,CACVI,QAASO,EACTJ,SAAS,KAEff,KAAKP,S,+BAGX,SAAkB2B,GACd3B,KAAKe,SAAS,CAAEQ,UAAU,EAAMC,aAAcG,EAAMC,Y,gCAGxD,WACI5B,KAAKI,YAAcC,IAAAA,UAAiBL,KAAKE,MAAMC,GAAIH,KAAKM,gBAAgBC,KAAKP,OACzEA,KAAKE,MAAM2B,YACX7B,KAAK8B,WAGL9B,KAAKe,SAAS,CACVO,SAAS,M,8BAKrB,SAAiBS,GACb,IAAIC,EAAMD,EAAEE,OAAOC,MACnBlC,KAAKN,MAAM0B,WAAWc,MAAQF,EAE9BhC,KAAKe,SAAS,CACVK,WAAYpB,KAAKN,MAAM0B,e,+BAI/B,SAAkBW,GACd,IAQSI,EAGG1B,EAXRuB,EAAMD,EAAEE,OAAOC,MAQnB,IAPAF,EAAMD,EAAEE,OAAOG,QACfpC,KAAKN,MAAM0B,WAAWgB,QAAUJ,EAEhChC,KAAKe,SAAS,CACVK,WAAYpB,KAAKN,MAAM0B,aAGlBe,EAAI,EAAGA,EAAInC,KAAKN,MAAM2B,OAAOvB,OAAQqC,IACP,aAA/BnC,KAAKN,MAAM2B,OAAOc,GAAG1B,QAEjBA,EAAQT,KAAKN,MAAM2B,OAAOc,GAE9B9B,IAAAA,QAAe,gBAAiB,CAC5BK,KAAM,cACN2B,QAAS5B,EAAMN,GACfK,UAAW,WACX8B,UAAWN,O,kCAM3B,WAAuB,IAGFG,EAFjB,IAAKnC,KAAKE,MAAMqC,kBAAmB,CAC/B,GAAyB,MAArBvC,KAAKN,MAAM2B,OACX,IAASc,EAAI,EAAGA,EAAInC,KAAKN,MAAM2B,OAAOvB,OAAQqC,IAC1C9B,IAAAA,QAAe,gBAAiB,CAC5BK,KAAM,kBACN2B,QAASrC,KAAKN,MAAM2B,OAAOc,GAAGhC,KAKtCH,KAAKE,MAAM2B,aACXxB,IAAAA,QAAe,gBAAiB,CAC5BK,KAAM,kBACN2B,QAASrC,KAAKE,MAAMC,KAKhCE,IAAAA,YAAmBL,KAAKI,e,6BAG5B,SAAgBI,EAAWC,GAAO,IAatBU,EAZW,aAAfV,EAAMC,KACNV,KAAKe,SAASN,EAAMf,OAEA,iBAAfe,EAAMC,MACX8B,EAAAA,EAAAA,IAAU,gDAAD,OAAiD/B,EAAMgC,WAAazC,KAAKN,OAC5D,kBAAfe,EAAMC,KAEbV,KAAKe,SAAS,CACVpB,QAAQ,IAEU,eAAfc,EAAMC,MAGE,OADXS,EAAUnB,KAAKN,MAAMyB,WAErBA,EAAU,IAGdA,EAAUA,EAAQuB,OAAOjC,EAAMkC,UAE/B3C,KAAKe,SAAS,CACVI,QAAAA,KAEkB,iBAAfV,EAAMC,KACbV,KAAKe,SAAS,CACVI,QAAS,OAES,gBAAfV,EAAMC,MACbV,KAAK8B,a,yBAIb,SAAYrB,EAAOsB,GACf,IASgBG,EAeHC,EAxBT3B,EAAY,KACZwB,EAAM,KACV,GAAuB,WAAnBhC,KAAKN,MAAMiB,IAAkB,CAI7B,GAFAqB,EAAM,IAAIY,MAEN5C,KAAK6C,KAAKC,QAAQC,gBAClB,IAAK,IAAIC,KAAQhD,KAAK6C,KAAKC,QAAQC,gBAC3BE,MAAMD,KACNd,EAAQlC,KAAK6C,KAAKC,QAAQC,gBAAgBC,GAAMd,MACpDF,EAAIkB,KAAKhB,SAIbF,EAAIkB,KAAKlD,KAAK6C,KAAKC,QAAQZ,OAU/B,IANIF,EADe,IAAfA,EAAIlC,OACEkC,EAAI,GAGJmB,KAAKC,UAAUpB,GAGhBG,EAAI,EAAGA,EAAInC,KAAKN,MAAM2B,OAAOvB,OAAQqC,IACP,aAA/BnC,KAAKN,MAAM2B,OAAOc,GAAG1B,QACrBA,EAAQT,KAAKN,MAAM2B,OAAOc,IAGlC3B,EAAY,eAEX,CAGD,GAAkB,gBAFlBA,EAAYC,EAAMA,OAYd,YATAJ,IAAAA,QAAe,gBAAiB,CAC5BK,KAAM,cACN2B,QAAS5B,EAAMN,GACfK,UAAWA,EACX8B,UAAWa,KAAKC,UAAU,CACtBnC,IAAKc,EAAEd,IACPoC,QAAStB,EAAEsB,YAOZ,OADXrB,EAAMD,EAAEE,OAAOC,QACmB,MAAfF,EAAII,UACnBJ,EAAMD,EAAEE,OAAOG,SAIvBpC,KAAKN,MAAM0B,WAAWc,MAAQF,EAC9BhC,KAAKe,SAASf,KAAKN,OAEnBW,IAAAA,QAAe,gBAAiB,CAC5BK,KAAM,cACN2B,QAAS5B,EAAMN,GACfK,UAAWA,EACX8B,UAAWN,M,oBAInB,WACI,GAAIhC,KAAKN,MAAMC,OACX,OAAO,KAGX,GAAIK,KAAKN,MAAM6B,SACX,OAAO,gBAAC,IAAD,CAAa+B,UAAW,CAC3B5C,KAAM,QACNkB,QAAS5B,KAAKN,MAAM8B,gBAI5B,GAAIxB,KAAKE,MAAMyB,MACX,OAAO,gBAAC,IAAD,CAAa2B,UAAW,CAC3B5C,KAAM,QACNkB,QAAS5B,KAAKN,MAAM8B,gBAI5B,GAAIxB,KAAKN,MAAM4B,QACX,OAAO,4BAGX,GAAItB,KAAKE,MAAMqD,GACX,OAAOC,EAAAA,EAAAA,IAAgB,QACnB9C,KAAMV,KAAKE,MAAMuD,eACdzD,KAAKE,MAAMA,OACfF,KAAKE,MAAMwD,SAGlB,IAAIC,EAAW,KAEX3D,KAAKN,MAAMyB,SAAWnB,KAAKN,MAAMyB,QAAQyC,IACrC5D,KAAKN,MAAMyB,QAAQrB,OAAS,IAC5B6D,EAAW3D,KAAKN,MAAMyB,QAAQyC,IAAI,SAAUC,GACxC,OAAc,MAAVA,EAAEnD,MACK8C,EAAAA,EAAAA,GAAgBK,EAAG7D,KAAKE,MAAMwD,SAElCG,GACTtD,KAAKP,QAGNA,KAAKN,MAAMyB,UAChBwC,EAAW3D,KAAKN,MAAMyB,SAG1B,IAAIC,EAAapB,KAAKN,MAAM0B,WAsC5B,OApCkB,MAAdA,IACAA,EAAa,IAGI,MAAjBA,EAAWjB,KACXiB,EAAWjB,GAAKH,KAAKE,MAAMC,IAGN,MAArBH,KAAKN,MAAM2B,QAAkBrB,KAAKN,MAAM2B,OAAOuC,KAC/C5D,KAAKN,MAAM2B,OAAOuC,IAAI,SAAUnD,GAI5B,OAHAW,EAAWX,EAAMA,OAAS,SAAUsB,GAChC/B,KAAK8D,YAAYrD,EAAOsB,IAC1BxB,KAAKP,MACA,MACTO,KAAKP,OAGY,UAAnBA,KAAKN,MAAMiB,MACa,SAApBS,EAAWV,MAAuC,aAApBU,EAAWV,OACzCU,EAAW2C,SAAW/D,KAAKgE,iBAAiBzD,KAAKP,OAG7B,aAApBoB,EAAWV,OACXU,EAAW2C,SAAW/D,KAAKiE,kBAAkB1D,KAAKP,QAInC,aAAnBA,KAAKN,MAAMiB,MACXS,EAAW2C,SAAW/D,KAAKgE,iBAAiBzD,KAAKP,OAGrDoB,EAAW8C,IAAM,UACjB9C,EAAWH,IAAMjB,KAAKE,MAAMC,GAE5BH,KAAK8C,QAAU5B,EAAAA,cAAoBlB,KAAKN,MAAMiB,IAAKS,EAAYuC,GAExD,CAAC3D,KAAK8C,QACb,gBAAC,IAAD,CAAeqB,QAAsC,IAA7BnE,KAAKE,MAAMkE,gBAAwBC,QAASrE,KAAKE,MAAMoE,YAAaC,SAAUvE,KAAK8B,SAASvB,KAAKP,a,EA7R3HgB,CAAyBE,EAAAA","sources":["webpack://materialui/./app/ud-element.jsx"],"sourcesContent":["import React from 'react';\r\nimport renderComponent from './services/render-service.jsx';\r\nimport PubSub from 'pubsub-js';\r\nimport { fetchGet, fetchPost } from './services/fetch-service.jsx';\r\nimport { getApiPath } from './config.jsx';\r\nimport ReactInterval from 'react-interval';\r\nimport LazyElement from './basics/lazy-element.jsx';\r\n\r\nexport default class UdElement extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hidden: false\r\n        }\r\n    }\r\n\r\n    isGuid(str) {\r\n        if (str == null) { return false }\r\n\r\n        if (str[0] === \"{\") {\r\n            str = str.substring(1, str.length - 1);\r\n        }\r\n        var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(str);\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!this.isGuid(this.props.id)) {\r\n            this.pubSubToken = PubSub.subscribe(this.props.id, this.onIncomingEvent.bind(this));\r\n        }\r\n    }\r\n\r\n    onIncomingEvent(eventName, event) {\r\n        if (event.type === \"removeElement\") {\r\n            if (this.props.tag == 'input') {\r\n                let inputComp = $(`#${this.props.id}`)\r\n                inputComp[0].parentElement.remove()\r\n            }\r\n            this.setState({\r\n                hidden: true\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.hidden && this.pubSubToken != null) {\r\n            PubSub.unsubscribe(this.pubSubToken);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.pubSubToken != null) {\r\n            PubSub.unsubscribe(this.pubSubToken);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hidden) {\r\n            return null;\r\n        }\r\n        return <UDElementContent key={this.props.id} {...this.props} />\r\n    }\r\n}\r\n\r\nclass UDElementContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: props.content,\r\n            tag: props.tag,\r\n            attributes: props.attributes,\r\n            events: props.events,\r\n            loading: true,\r\n            hasError: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    loadData() {\r\n        fetchGet(\"/api/internal/component/element/\" + this.props.id, function (data) {\r\n            if (data.error) {\r\n                this.setState({\r\n                    hasError: true,\r\n                    errorMessage: data.error.message\r\n                })\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                content: data,\r\n                loading: false\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true, errorMessage: error.message });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.pubSubToken = PubSub.subscribe(this.props.id, this.onIncomingEvent.bind(this));\r\n        if (this.props.hasCallback) {\r\n            this.loadData();\r\n        }\r\n        else {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    onTextboxChanged(e) {\r\n        var val = e.target.value;\r\n        this.state.attributes.value = val;\r\n\r\n        this.setState({\r\n            attributes: this.state.attributes\r\n        });\r\n    }\r\n\r\n    onCheckboxChanged(e) {\r\n        var val = e.target.value;\r\n        val = e.target.checked;\r\n        this.state.attributes.checked = val;\r\n\r\n        this.setState({\r\n            attributes: this.state.attributes\r\n        });\r\n\r\n        for (var i = 0; i < this.state.events.length; i++) {\r\n            if (this.state.events[i].event === 'onChange') {\r\n\r\n                var event = this.state.events[i];\r\n\r\n                PubSub.publish('element-event', {\r\n                    type: \"clientEvent\",\r\n                    eventId: event.id,\r\n                    eventName: 'onChange',\r\n                    eventData: val\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (!this.props.preventUnregister) {\r\n            if (this.state.events != null) {\r\n                for (var i = 0; i < this.state.events.length; i++) {\r\n                    PubSub.publish('element-event', {\r\n                        type: \"unregisterEvent\",\r\n                        eventId: this.state.events[i].id\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.props.hasCallback) {\r\n                PubSub.publish('element-event', {\r\n                    type: \"unregisterEvent\",\r\n                    eventId: this.props.id\r\n                });\r\n            }\r\n        }\r\n\r\n        PubSub.unsubscribe(this.pubSubToken);\r\n    }\r\n\r\n    onIncomingEvent(eventName, event) {\r\n        if (event.type === \"setState\") {\r\n            this.setState(event.state);\r\n        }\r\n        else if (event.type === \"requestState\") {\r\n            fetchPost(`/api/internal/component/element/sessionState/${event.requestId}`, this.state);\r\n        } else if (event.type === \"removeElement\") {\r\n\r\n            this.setState({\r\n                hidden: true\r\n            })\r\n        } else if (event.type === \"addElement\") {\r\n\r\n            var content = this.state.content;\r\n            if (content == null) {\r\n                content = []\r\n            }\r\n\r\n            content = content.concat(event.elements);\r\n\r\n            this.setState({\r\n                content\r\n            })\r\n        } else if (event.type === \"clearElement\") {\r\n            this.setState({\r\n                content: null\r\n            })\r\n        } else if (event.type === \"syncElement\") {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    onUserEvent(event, e) {\r\n        var eventName = null;\r\n        var val = null;\r\n        if (this.state.tag === 'select') {\r\n\r\n            val = new Array();\r\n\r\n            if (this.refs.element.selectedOptions) {\r\n                for (var item in this.refs.element.selectedOptions) {\r\n                    if (isNaN(item)) continue;\r\n                    var value = this.refs.element.selectedOptions[item].value;\r\n                    val.push(value);\r\n                }\r\n            }\r\n            else {\r\n                val.push(this.refs.element.value);\r\n            }\r\n\r\n            if (val.length === 1) {\r\n                val = val[0]\r\n            }\r\n            else {\r\n                val = JSON.stringify(val);\r\n            }\r\n\r\n            for (var i = 0; i < this.state.events.length; i++) {\r\n                if (this.state.events[i].event === 'onChange') {\r\n                    event = this.state.events[i];\r\n                }\r\n            }\r\n            eventName = 'onChange'\r\n        }\r\n        else {\r\n            eventName = event.event;\r\n\r\n            if (eventName === \"onKeyPress\") {\r\n                PubSub.publish('element-event', {\r\n                    type: \"clientEvent\",\r\n                    eventId: event.id,\r\n                    eventName: eventName,\r\n                    eventData: JSON.stringify({\r\n                        key: e.key,\r\n                        keyCode: e.keyCode\r\n                    })\r\n                });\r\n                return;\r\n            }\r\n\r\n            val = e.target.value;\r\n            if (val != null && val.checked != null) {\r\n                val = e.target.checked;\r\n            }\r\n        }\r\n\r\n        this.state.attributes.value = val;\r\n        this.setState(this.state);\r\n\r\n        PubSub.publish('element-event', {\r\n            type: \"clientEvent\",\r\n            eventId: event.id,\r\n            eventName: eventName,\r\n            eventData: val\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hidden) {\r\n            return null;\r\n        }\r\n\r\n        if (this.state.hasError) {\r\n            return <LazyElement component={{\r\n                type: 'error',\r\n                message: this.state.errorMessage\r\n            }} />\r\n        }\r\n\r\n        if (this.props.error) {\r\n            return <LazyElement component={{\r\n                type: 'error',\r\n                message: this.state.errorMessage\r\n            }} />\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            return <div></div>\r\n        }\r\n\r\n        if (this.props.js) {\r\n            return renderComponent({\r\n                type: this.props.componentName,\r\n                ...this.props.props\r\n            }, this.props.history)\r\n        }\r\n\r\n        var children = null;\r\n\r\n        if (this.state.content && this.state.content.map) {\r\n            if (this.state.content.length > 0) {\r\n                children = this.state.content.map(function (x) {\r\n                    if (x.type != null) {\r\n                        return renderComponent(x, this.props.history);\r\n                    }\r\n                    return x;\r\n                }.bind(this));\r\n            }\r\n        }\r\n        else if (this.state.content) {\r\n            children = this.state.content;\r\n        }\r\n\r\n        var attributes = this.state.attributes;\r\n\r\n        if (attributes == null) {\r\n            attributes = {}\r\n        }\r\n\r\n        if (attributes.id == null) {\r\n            attributes.id = this.props.id;\r\n        }\r\n\r\n        if (this.state.events != null && this.state.events.map) {\r\n            this.state.events.map(function (event) {\r\n                attributes[event.event] = function (e) {\r\n                    this.onUserEvent(event, e);\r\n                }.bind(this);\r\n                return null;\r\n            }.bind(this));\r\n        }\r\n\r\n        if (this.state.tag === \"input\") {\r\n            if (attributes.type === \"text\" || attributes.type === \"password\") {\r\n                attributes.onChange = this.onTextboxChanged.bind(this);\r\n            }\r\n\r\n            if (attributes.type === \"checkbox\") {\r\n                attributes.onChange = this.onCheckboxChanged.bind(this);\r\n            }\r\n        }\r\n\r\n        if (this.state.tag === \"textarea\") {\r\n            attributes.onChange = this.onTextboxChanged.bind(this);\r\n        }\r\n\r\n        attributes.ref = 'element';\r\n        attributes.key = this.props.id;\r\n\r\n        this.element = React.createElement(this.state.tag, attributes, children);\r\n\r\n        return [this.element,\r\n        <ReactInterval timeout={this.props.refreshInterval * 1000} enabled={this.props.autoRefresh} callback={this.loadData.bind(this)} />];\r\n    }\r\n}\r\n"],"names":["UdElement","state","hidden","str","substring","length","test","this","isGuid","props","id","pubSubToken","PubSub","onIncomingEvent","bind","eventName","event","type","tag","$","parentElement","remove","setState","UDElementContent","key","React","content","attributes","events","loading","hasError","errorMessage","fetchGet","data","error","message","hasCallback","loadData","e","val","target","value","i","checked","eventId","eventData","preventUnregister","fetchPost","requestId","concat","elements","Array","refs","element","selectedOptions","item","isNaN","push","JSON","stringify","keyCode","component","js","renderComponent","componentName","history","children","map","x","onUserEvent","onChange","onTextboxChanged","onCheckboxChanged","ref","timeout","refreshInterval","enabled","autoRefresh","callback"],"sourceRoot":""}