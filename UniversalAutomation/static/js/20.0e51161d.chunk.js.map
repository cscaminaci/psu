{"version":3,"sources":["components/ui/TagLink.tsx","components/jobs/components/ViewScriptButton.tsx","components/jobs/components/CancelJobButton.tsx","components/jobs/jobs.tsx"],"names":["TagLink","text","to","color","style","ViewScriptButton","job","props","navigate","useNavigate","location","useLocation","requiredRoles","title","isScriptDeleted","type","icon","disabled","aria-label","scriptFullPath","onClick","state","from","pathname","CancelJobButton","useMutation","cancel","mutateAsync","isLoading","status","autoAdjustOverflow","arrowPointAtCenter","okText","cancelText","onConfirm","key","id","action","loading","Jobs","useState","tag","setTag","useQuery","name","refetchOnWindowFocus","keepPreviousData","jobs","data","isFetching","tags","tagsLoading","columns","dataIndex","align","responsive","render","record","output","statusDescription","setStatusTag","editable","value","split","map","tagName","find","m","cursor","mapTags","generateJobDescription","width","page","reverse","actions","closable","onClose","pagination","hideOnSinglePage","showSizeChanger","total","length"],"mappings":"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","file":"static/js/20.0e51161d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tag } from \"antd\";\r\n\r\nexport default function TagLink({ text, to }) {\r\n  return (\r\n    <Tag color=\"blue\">\r\n      <Link style={{ color: \"inherit\" }} to={to}>\r\n        {text}\r\n      </Link>\r\n    </Tag>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, ButtonProps, Tooltip } from \"antd\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Job } from \"types\";\r\nimport { CodeFilled } from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\n\r\ntype ViewScriptButtonProps = {\r\n  job: Job;\r\n} & ButtonProps;\r\n\r\nexport default function ViewScriptButton({\r\n  job,\r\n  ...props\r\n}: ViewScriptButtonProps) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\"]}>\r\n      <Tooltip title={job?.isScriptDeleted ? \"Script deleted\" : \"Go to script\"}>  \r\n      <Button\r\n        type=\"text\"\r\n        icon={<CodeFilled />}\r\n        {...props}\r\n        disabled={job?.isScriptDeleted}\r\n        aria-label={`view script ${job?.scriptFullPath} button`}\r\n        onClick={() =>\r\n          navigate(`/admin/automation/scripts/${job?.scriptFullPath}`, {\r\n            state: {\r\n              from: location?.pathname,\r\n            },\r\n          })\r\n        }\r\n      />\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useMutation } from \"components/utils/queryClient\";\r\nimport { Job } from \"types\";\r\nimport { Button, ButtonProps, Popconfirm, Tooltip } from \"antd\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport { StopFilled } from \"@ant-design/icons\";\r\n\r\ntype CancelJobButtonProps = {\r\n  job: Job;\r\n} & ButtonProps;\r\n\r\nexport default function CancelJobButton({\r\n  job,\r\n  ...props\r\n}: CancelJobButtonProps) {\r\n  const { mutateAsync: cancel, isLoading } = useMutation();\r\n\r\n  function onClick() {\r\n    cancel({\r\n      key: `/job/${job?.id}`,\r\n      action: \"delete\",\r\n    });\r\n  }\r\n\r\n  return job?.status === 1 || job?.status === 4 ? (\r\n    <RoleGuard requiredRoles={[\"Administrator\"]}>\r\n      <Popconfirm\r\n        autoAdjustOverflow\r\n        arrowPointAtCenter\r\n        color=\"red\"\r\n        okText=\"Yes\"\r\n        cancelText=\"No\"\r\n        title=\"Are you sure you want to stop this job?\"\r\n        onConfirm={onClick}\r\n      >\r\n        <Tooltip title=\"Stop Job\">\r\n          <Button\r\n            aria-label={`cancel job ${job?.id} button`}\r\n            loading={isLoading}\r\n            type=\"text\"\r\n            icon={<StopFilled />}\r\n            {...props}\r\n          />\r\n        </Tooltip>\r\n      </Popconfirm>\r\n    </RoleGuard>\r\n  ) : null;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Table from \"components/ui/Table\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { CustomColumns, Job, JobQuery, Tag } from \"types\";\r\nimport { Breakpoint } from \"antd/lib/_util/responsiveObserve\";\r\nimport JobDateTime from \"./JobDateTime\";\r\nimport { AlignType } from \"rc-table/lib/interface\";\r\nimport { generateJobDescription, setStatusTag } from \"components/utils/utils\";\r\nimport TagLink from \"components/ui/TagLink\";\r\nimport { Space, Tag as AntTag, Tooltip } from \"antd\";\r\nimport ViewScriptButton from \"./components/ViewScriptButton\";\r\nimport CancelJobButton from \"./components/CancelJobButton\";\r\n\r\nexport default function Jobs(props) {\r\n  const [tag, setTag] = useState(null);\r\n  const { data: jobs, isFetching, isLoading } = useQuery<JobQuery>(`/job?tag=${tag?.name ? tag.name : \"\"}${props.state ? \"&status=\" + props.state : \"\"}`, {\r\n    refetchOnWindowFocus: false,\r\n    keepPreviousData: true,\r\n  });\r\n  const { data: tags, isLoading: tagsLoading } = useQuery<Tag[]>(\"/tag\");\r\n\r\n  const mapTags = (record: Job) => {\r\n    if (tagsLoading || record?.tags === null) return <></>\r\n\r\n    return record.tags.split('|').map((tagName) => {\r\n      const tag = tags?.find(m => m.name === tagName);\r\n      return <AntTag key={tag?.name} color={tag?.color} style={{ cursor: 'pointer' }} onClick={() => {\r\n        setTag(tag);\r\n      }}>\r\n        {tag?.name}\r\n      </AntTag>\r\n    })\r\n  }\r\n\r\n  const columns: CustomColumns<Job>[] = [\r\n    {\r\n      title: \"Id\",\r\n      key: \"id\",\r\n      dataIndex: \"id\",\r\n      align: \"left\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => <TagLink text={text} to={`${record.id}`} />,\r\n    },\r\n    {\r\n      title: \"Script\",\r\n      key: \"script\",\r\n      dataIndex: \"script\",\r\n      align: \"left\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => record.scriptFullPath,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      align: \"center\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => {\r\n        return record?.status === 3 ? (\r\n          <Tooltip title={record?.output || record?.statusDescription} color=\"red\">\r\n            {setStatusTag(record?.status)}\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title={record?.output || record?.statusDescription}>\r\n            {setStatusTag(record?.status)}\r\n          </Tooltip>\r\n\r\n        );\r\n      },\r\n    },\r\n    {\r\n      key: \"tags\",\r\n      title: \"Tags\",\r\n      dataIndex: \"tags\",\r\n      editable: false,\r\n      render: (value, record: Job) => {\r\n        return mapTags(record);\r\n      }\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      key: \"datetime\",\r\n      align: \"right\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record: Job) => generateJobDescription(record),\r\n    },\r\n    {\r\n      title: \"Execution Time\",\r\n      key: \"datetime\",\r\n      align: \"right\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record: Job) => <JobDateTime job={record} />,\r\n    },\r\n    {\r\n      key: \"actions\",\r\n      title: \"actions\",\r\n      width: \"min-content\",\r\n      render: (text, record: Job) => {\r\n        return <Space>\r\n          <ViewScriptButton job={record} />\r\n          <CancelJobButton job={record} />\r\n        </Space>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      title=\"Jobs\"\r\n      data={jobs?.page?.reverse()}\r\n      columns={columns}\r\n      loading={isLoading || isFetching}\r\n      actions={[\r\n        tag && <AntTag color={tag.color}\r\n          closable\r\n          onClose={() => {\r\n            setTag(null);\r\n          }}>{tag.name}</AntTag>\r\n      ]}\r\n      pagination={{\r\n        hideOnSinglePage: true,\r\n        showSizeChanger: false,\r\n        total: jobs?.page?.length,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"sourceRoot":""}