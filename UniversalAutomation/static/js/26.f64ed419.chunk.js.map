{"version":3,"sources":["components/ui/EditorButton.tsx","components/ui/ResourceInfo.tsx","components/settings/role.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/Editor.tsx"],"names":["EditorButton","to","accessControls","allowedWithOneWayGitSync","props","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","title","type","icon","ResourceInfo","navigate","useNavigate","bordered","bodyStyle","padding","ghost","onBack","RolePage","id","useParams","role","useQuery","enabled","initialData","queryClient","getQueryData","find","parseInt","data","identities","isLoading","setHidden","record","name","columns","key","dataIndex","width","render","text","hidden","resource","resourceInfo","parent","self","content","policy","capitalize","subTitle","actions","loading","psuDark","base","inherit","rules","token","foreground","colors","psuLight","loader","config","paths","vs","init","then","monaco","languages","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","model","options","a","axios","post","getValue","headers","range","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","position","context","findIndex","x","triggerCharacter","cursorPosition","getOffsetAt","suggestions","map","insertText","label","documentation","help","kind","CompletionItemKind","Property","incomplete","EditorContext","React","createContext","CodeEditor","children","refetch","useState","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","message","success","editorRef","useRef","onSave","useCallback","action","current","startsWith","schemaName","preserveBOM","lineEnding","onError","error","variables","refetchQueries","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","useEffect","defineTheme","setTheme","onCopy","zoomIn","zoomOut","value","useMemo","Provider","SaveButton","child","cloneElement","SaveFilled","onClick","callAll","BaseEditor","useContext","theme","language","tip","height","onMount","FullEditor","showSave","hideToolbar","usePageContext","extra","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","settings","wordWrap","wrappingIndent","minimap","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"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","file":"static/js/26.f64ed419.chunk.js","sourcesContent":["import React from \"react\";\r\nimport RoleGuard from \"../standalone/role-guard\";\r\nimport { Button, ButtonProps, Tooltip } from \"antd\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\nimport { CodeFilled } from \"@ant-design/icons\";\r\nimport { AccessControlTypes, RoleGuardProps } from \"types\";\r\n\r\ntype EditorButtonProps = {\r\n  to: LinkProps[\"to\"];\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditorButton({\r\n  to,\r\n  accessControls,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditorButtonProps) {\r\n  return (\r\n    <RoleGuard\r\n      requiredRoles={[\"Administrator\", \"Operator\"]}\r\n      requiredAccessControls={AccessControlTypes.Edit}\r\n      accessControls={accessControls}\r\n      allowedWithOneWayGitSync={allowedWithOneWayGitSync}\r\n    >\r\n      <Tooltip title=\"Edit Details\">\r\n        <Link to={to}>\r\n          <Button type=\"text\" icon={<CodeFilled />} {...props} />\r\n        </Link>\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, PageHeaderProps, PageHeader } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResourceInfo(props: PageHeaderProps & { children?: React.ReactNode }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Card bordered={false} bodyStyle={{padding: 0}}>\r\n      <PageHeader {...props} ghost={true} onBack={() => navigate(-1)} />\r\n    </Card>\r\n  );\r\n}\r\n","import \"../../Tables.module.css\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport {\r\n  LeftPanel,\r\n  Page,\r\n  PageContentBase,\r\n  PageHeader,\r\n  RightPanel,\r\n  RightPanelSizeButton,\r\n} from \"components/pages/Page\";\r\nimport { CustomColumns, Identity, Role } from \"types\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport { useQuery } from \"react-query3\";\r\nimport ResourceInfo from \"components/ui/ResourceInfo\";\r\nimport Table from \"components/ui/Table\";\r\nimport { Button, Space } from \"antd\";\r\nimport DeleteButton from \"components/ui/DeleteButton\";\r\nimport EditorButton from \"components/ui/EditorButton\";\r\nimport { capitalize } from \"components/utils/utils\";\r\n\r\nexport default function RolePage() {\r\n  const { id } = useParams();\r\n\r\n  const { data: role } = useQuery<Role>(`/role/${id}`, {\r\n    enabled: !!id,\r\n    initialData: (): Role =>\r\n      queryClient\r\n        .getQueryData<Role[]>(\"/role\")\r\n        ?.find((role) => role?.id === parseInt(id)) || null,\r\n  });\r\n\r\n  const { data: identities, isLoading } = useQuery<Identity[]>(\r\n    `/role/${id}/identity`,\r\n    {\r\n      enabled: !!role,\r\n    }\r\n  );\r\n\r\n  function setHidden(record: Identity) {\r\n    return record.name === \"Admin\" || record.name === \"System\" ? true : false;\r\n  }\r\n\r\n  const columns: CustomColumns<Identity>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <EditorButton to={`/security/identities/${record?.id}`} allowedWithOneWayGitSync={false} />\r\n            <DeleteButton hidden={setHidden(record)} resource={record} allowedWithOneWayGitSync={false} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page\r\n      resource={{\r\n        ...role,\r\n        resourceInfo: {\r\n          ...role.resourceInfo,\r\n          parent: role?.resourceInfo?.self,\r\n        },\r\n        content: role?.policy,\r\n      }}\r\n    >\r\n      <PageHeader>\r\n        <ResourceInfo\r\n          title={capitalize(role?.name)}\r\n          subTitle={`#${role?.id}`}\r\n        />\r\n      </PageHeader>\r\n      <PageContentBase>\r\n        <LeftPanel>\r\n          <CodeEditor>\r\n            <FullEditor title=\"Policy Editor\" />\r\n          </CodeEditor>\r\n        </LeftPanel>\r\n        <RightPanel>\r\n          <Table\r\n            actions={[\r\n              <RightPanelSizeButton>\r\n                <Button />\r\n              </RightPanelSizeButton>,\r\n            ]}\r\n            title=\"Identities\"\r\n            data={identities}\r\n            columns={columns}\r\n            loading={isLoading}\r\n          />\r\n        </RightPanel>\r\n      </PageContentBase>\r\n    </Page>\r\n  );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\n\r\nloader.config({ paths: { vs: \"/admin/vs\" } });\r\nloader.init().then(monaco => {\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(`/api/v1/editor/format`, model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(`/api/v1/editor/complete`, {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: monaco.languages.CompletionItemKind.Property,\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { } }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(false);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      model.onDidChangeContent(() => {\r\n        var versionId = model.getVersionId();\r\n        debounce(async () => {\r\n          var newVersionId = model.getVersionId();\r\n          if (versionId !== newVersionId) return;\r\n\r\n          let { data } = await axios.post(`/api/v1/editor/parse`, model.getValue(), {\r\n            headers: {\r\n              'content-type': 'text/plain'\r\n            }\r\n          });\r\n\r\n          const markerData = data.map(x => {\r\n            return {\r\n              startColumn: x.token.startColumn,\r\n              endColumn: x.token.endColumn,\r\n              startLineNumber: x.token.startLine,\r\n              endLineNumber: x.token.endLine,\r\n              severity: MarkerSeverity.Error,\r\n              message: x.message\r\n            }\r\n          });\r\n\r\n          monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n        }, 300)();\r\n\r\n      });\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const { resource } = usePageContext();\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}