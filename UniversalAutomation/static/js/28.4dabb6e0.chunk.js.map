{"version":3,"sources":["components/ui/TimestampToggle.tsx","components/jobs/output.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/Editor.tsx"],"names":["TimestampToggle","isVisible","setIsVisible","size","style","backgroundColor","presetPrimaryColors","checkedChildren","unCheckedChildren","checked","onChange","config","readOnly","wordWrap","wrappingIndent","minimap","enabled","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","scrollbar","horizontal","vertical","useShadows","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder","JobOutput","showTimestamp","setShowTimestamp","refetchInterval","job","hideToolbar","useQuery","id","refetchOnWindowFocus","keepPreviousData","data","isLoading","refetch","getLogContent","JSON","parse","log","map","entry","JobId","error","content","jobLogContent","status","JobStatus","Completed","Failed","parseJobLog","parseJobLogNoTimestamp","title","language","showSave","actions","loading","active","paragraph","rows","width","options","value","psuDark","base","inherit","rules","token","foreground","colors","psuLight","loader","paths","vs","init","then","monaco","languages","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","model","a","axios","post","getValue","headers","text","range","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","position","context","findIndex","x","triggerCharacter","cursorPosition","getOffsetAt","suggestions","insertText","label","documentation","help","kind","CompletionItemKind","Property","incomplete","EditorContext","React","createContext","CodeEditor","children","useState","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","message","success","editorRef","useRef","onSave","useCallback","key","action","resource","current","resourceInfo","self","startsWith","schemaName","preserveBOM","lineEnding","onError","variables","queryClient","refetchQueries","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","parent","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","useEffect","defineTheme","setTheme","onCopy","zoomIn","zoomOut","useMemo","Provider","SaveButton","child","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","allowedWithOneWayGitSync","cloneElement","type","props","icon","SaveFilled","onClick","callAll","BaseEditor","useContext","theme","tip","height","onMount","FullEditor","usePageContext","bordered","bodyStyle","padding","extra","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","settings"],"mappings":"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","file":"static/js/28.4dabb6e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Switch } from \"antd\";\r\nimport { presetPrimaryColors } from \"@ant-design/colors\";\r\n\r\nexport default function TimestampToggle({\r\n  isVisible,\r\n  setIsVisible,\r\n}: {\r\n  isVisible: boolean;\r\n  setIsVisible: () => void;\r\n}) {\r\n  return (\r\n    <Switch\r\n      size=\"small\"\r\n      style={{\r\n          backgroundColor: isVisible ? presetPrimaryColors[\"blue\"] : presetPrimaryColors[\"red\"]\r\n      }}  \r\n      checkedChildren=\"Show Time\"\r\n      unCheckedChildren=\"Hide Time\"\r\n      checked={isVisible}\r\n      onChange={setIsVisible}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { parseJobLog, parseJobLogNoTimestamp } from \"components/utils/utils\";\r\nimport { Job, JobLog, JobStatus, JobStreamOutput } from \"types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport { EditorProps } from \"@monaco-editor/react\";\r\nimport { Skeleton } from \"antd\";\r\nimport TimestampToggle from \"components/ui/TimestampToggle\";\r\n\r\nconst config: EditorProps[\"options\"] = {\r\n  readOnly: true,\r\n  wordWrap: \"on\",\r\n  wrappingIndent: \"same\",\r\n  minimap: {\r\n    enabled: false,\r\n  },\r\n  lineHeight: 20,\r\n  lineNumbersMinChars: 5,\r\n  scrollBeyondLastLine: false,\r\n  scrollbar: {\r\n    horizontal: \"hidden\",\r\n    vertical: \"hidden\",\r\n    useShadows: false,\r\n  },\r\n  hideCursorInOverviewRuler: true,\r\n  overviewRulerLanes: 0,\r\n  overviewRulerBorder: false,\r\n};\r\n\r\nexport default function JobOutput({ showTimestamp, setShowTimestamp, refetchInterval, job, hideToolbar }: { showTimestamp?: boolean, setShowTimestamp?: () => void, refetchInterval: false | number, job: Job, hideToolbar?: boolean }) {\r\n  const { data, isLoading, refetch } = useQuery<JobLog>(\r\n    `/job/${job?.id}/log`, {\r\n    refetchOnWindowFocus: false,\r\n    keepPreviousData: true,\r\n    refetchInterval\r\n  }\r\n  );\r\n\r\n  function getLogContent() {\r\n    if (isLoading) return null;\r\n    try {\r\n      let logContent: JobStreamOutput[] = JSON.parse(data.log)?.map((entry: JobStreamOutput) => ({ ...entry, JobId: data?.id }));\r\n      return logContent;\r\n    } catch (error) {\r\n      //console.error(\"Error parsing Job Log\");\r\n    }\r\n  }\r\n\r\n  const content = getLogContent();\r\n  let jobLogContent = \"\";\r\n  if ((job?.status === JobStatus.Completed || job?.status === JobStatus.Failed) && content == null && !isLoading) {\r\n    jobLogContent = \"# This job produced no output\"\r\n  } else {\r\n    jobLogContent = showTimestamp ? parseJobLog(getLogContent()) : parseJobLogNoTimestamp(getLogContent());\r\n  }\r\n\r\n\r\n  return (\r\n    <CodeEditor refetch={refetch}>\r\n      <FullEditor\r\n        title=\"Output\"\r\n        language=\"psulog\"\r\n        hideToolbar={hideToolbar}\r\n        showSave={false}\r\n        actions={<TimestampToggle isVisible={showTimestamp} setIsVisible={() => setShowTimestamp()} />}\r\n        loading={\r\n          <Skeleton\r\n            active\r\n            loading={isLoading}\r\n            paragraph={{ rows: 5, width: [60, 60, 40, 80, 120] }}\r\n          />\r\n        }\r\n        options={{ ...config }}\r\n        value={jobLogContent}\r\n      />\r\n    </CodeEditor>\r\n  );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\n\r\nloader.config({ paths: { vs: \"/admin/vs\" } });\r\nloader.init().then(monaco => {\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(`/api/v1/editor/format`, model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(`/api/v1/editor/complete`, {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: monaco.languages.CompletionItemKind.Property,\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { } }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(false);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      model.onDidChangeContent(() => {\r\n        var versionId = model.getVersionId();\r\n        debounce(async () => {\r\n          var newVersionId = model.getVersionId();\r\n          if (versionId !== newVersionId) return;\r\n\r\n          let { data } = await axios.post(`/api/v1/editor/parse`, model.getValue(), {\r\n            headers: {\r\n              'content-type': 'text/plain'\r\n            }\r\n          });\r\n\r\n          const markerData = data.map(x => {\r\n            return {\r\n              startColumn: x.token.startColumn,\r\n              endColumn: x.token.endColumn,\r\n              startLineNumber: x.token.startLine,\r\n              endLineNumber: x.token.endLine,\r\n              severity: MarkerSeverity.Error,\r\n              message: x.message\r\n            }\r\n          });\r\n\r\n          monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n        }, 300)();\r\n\r\n      });\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const { resource } = usePageContext();\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}