{"version":3,"sources":["components/ui/EnvironmentSelectBox.tsx","components/ui/CredentialsSelectBox.tsx","components/scripts/components/scriptParameters.tsx","components/scripts/components/RunScript.tsx","components/scripts/scripts.tsx"],"names":["EnvironmentSelectBox","props","useQuery","data","isLoading","loading","Option","value","map","env","name","CredentialsSelectBox","variables","credentials","filter","variable","type","disableRunAsSupport","Fragment","cred","length","to","style","float","padding","ParametersForm","parameters","form","showGoTo","script","defaultValues","parameter","displayType","defaultValue","layout","labelCol","span","wrapperCol","initialValues","gotoJob","environment","itemProps","Item","label","displayName","required","tooltip","helpText","rules","message","showTime","format","validValues","validValue","mode","tokenSeparators","id","credential","valuePropName","RunScript","parameterSets","scriptParameters","m","parameterSet","x","index","self","indexOf","React","useState","defaultParameterSet","setParameterSet","useModalContext","onOk","serializeParameter","getFieldValue","JSON","stringify","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Execute","accessControls","allowedWithOneWayGitSync","icon","PlayCircleFilled","title","fullPath","onClickOk","jobParameters","width","marginBottom","longDescription","links","link","href","target","rel","textAlign","paddingRight","onChange","e","toString","Table","lazy","EditModal","FolderModal","ScriptModal","DeleteButton","EditorButton","DirectoryTree","Tree","Select","Scripts","storedView","localStorage","getItem","tags","setTags","folder","setFolder","view","setView","currentTheme","useThemeSwitcher","settings","useAppStore","folders","isFoldersLoading","select","scripts","treeData","level","key","children","FolderType","Script","forEach","path","split","pathDivider","reduce","r","i","a","push","columns","dataIndex","align","render","text","record","editable","tag","color","cursor","onClick","find","resource","resourceInfo","parent","subTitle","extra","height","hasSider","backgroundColor","Sider","theme","className","defaultExpandAll","onSelect","keys","Content","actions","closable","onClose","parentPath","folderPath","setItem","suffixIcon","taggedScripts","startsWith","filterScripts","dayjs","extend","utc","localizedFormat"],"mappings":"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","file":"static/js/23.6ab2fd4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Environment } from \"../../types\";\r\n\r\nexport default function EnvironmentSelectBox(props) {\r\n  const { data, isLoading } = useQuery<Environment[]>(\"/environment\");\r\n  return (\r\n    <Select {...props} loading={isLoading}>\r\n      <Select.Option key={`default`} value={null}>Default</Select.Option>\r\n      {data?.map((env) => (\r\n        <Select.Option key={env.name} value={env.name}>{env.name}</Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { Variable } from \"types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CredentialsSelectBox(props) {\r\n  const { data: variables } = useQuery<Variable[]>(\"/variable\");\r\n\r\n  const credentials = variables?.filter(\r\n    (variable) => variable.type === \"PSCredential\" && !variable.disableRunAsSupport\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Select {...props}>\r\n        <Select.Option key={`default`} value={null}>Default</Select.Option>\r\n        {credentials?.map((cred) => (\r\n          <Select.Option key={cred.name} value={cred.name}>\r\n            {cred.name}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>\r\n      {credentials?.length === 0 && (\r\n        <Link to=\"/admin/platform/variables\" style={{ float: 'right', padding: 0 }}>Add Run As Credential</Link>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { FormInstance } from \"antd/es/form/Form\";\r\nimport { Script, ScriptParameter } from \"types\";\r\nimport CredentialsSelectBox from \"components/ui/CredentialsSelectBox\";\r\nimport EnvironmentSelectBox from \"components/ui/EnvironmentSelectBox\";\r\nexport default function ParametersForm({\r\n  parameters,\r\n  form,\r\n  showGoTo,\r\n  script\r\n}: {\r\n  parameters: ScriptParameter[];\r\n  form: FormInstance;\r\n  showGoTo: boolean;\r\n  script: Script;\r\n}) {\r\n  const defaultValues = parameters?.filter(parameter => parameter.displayType !== 3).map((parameter) => ({\r\n    [parameter.name]: parameter.defaultValue,\r\n  }));\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"horizontal\"\r\n      name=\"dynamic_parameters_form\"\r\n      labelCol={{ span: 6 }}\r\n      wrapperCol={{ span: 18 }}\r\n      initialValues={{\r\n        ...defaultValues,\r\n        gotoJob: true,\r\n        environment: \"Default\",\r\n      }}\r\n    >\r\n      {parameters?.map((parameter) => {\r\n\r\n        var itemProps = {};\r\n        if (parameter.displayType !== 3 && parameter.defaultValue) {\r\n          itemProps[\"initialValue\"] = parameter.defaultValue;\r\n        }\r\n\r\n\r\n        return (\r\n          <Form.Item\r\n            key={parameter.id}\r\n            name={parameter.name}\r\n            label={parameter.displayName || parameter.name}\r\n            required={parameter.required}\r\n            tooltip={parameter.helpText}\r\n            rules={[\r\n              {\r\n                required: parameter.required,\r\n                message: `${parameter.name} can't be empty.`,\r\n              },\r\n            ]}\r\n            {...itemProps}\r\n          >\r\n            {parameter.displayType === 0 ? (\r\n              <Input />\r\n            ) : parameter.displayType === 1 ? (\r\n              <InputNumber defaultValue={0} />\r\n            ) : parameter.displayType === 2 ? (\r\n              <Switch />\r\n            ) : parameter.displayType === 3 ? (\r\n              <DatePicker showTime format=\"DD-MM-YYYY HH:mm:ss\" />\r\n            ) : parameter.displayType === 4 ? (\r\n              <Select>\r\n                {parameter.validValues?.map((validValue) => {\r\n                  return (\r\n                    <Select.Option key={validValue} value={validValue}>\r\n                      {validValue}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : parameter.displayType === 5 ? (\r\n              <CredentialsSelectBox />\r\n            ) : parameter.displayType === 6 ? (\r\n              <Select mode=\"tags\" tokenSeparators={[\",\", \";\"]} >\r\n                {parameter.validValues?.map((validValue) => {\r\n                  return (\r\n                    <Select.Option key={validValue} value={validValue}>\r\n                      {validValue}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : null}\r\n          </Form.Item>\r\n        );\r\n      })}\r\n      {\r\n        !script.environment &&\r\n        <Form.Item name=\"environment\" label=\"Environment\">\r\n          <EnvironmentSelectBox />\r\n        </Form.Item>\r\n      }\r\n      {\r\n        !script.credential &&\r\n        <Form.Item name=\"credential\" label=\"Run As\">\r\n          <CredentialsSelectBox />\r\n        </Form.Item>\r\n      }\r\n\r\n      {showGoTo && (\r\n        <Form.Item\r\n          name=\"gotoJob\"\r\n          tooltip=\"Automatically navigate to job page when done.\"\r\n          valuePropName=\"checked\"\r\n          label=\"Go To Job\"\r\n        >\r\n          <Checkbox />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, ButtonProps, Col, Row, Select, Typography } from \"antd\";\r\nimport { AccessControlTypes, JobContext, RoleGuardProps, Script } from \"types\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport ParametersForm from \"./scriptParameters\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\n\r\ntype RunScriptProps = {\r\n  script: Script;\r\n} & ButtonProps &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function RunScript({ script, ...props }: RunScriptProps) {\r\n\r\n  const parameterSets = script?.scriptParameters?.map(m => m.parameterSet).filter(x => x !== 'Default').filter((value, index, self) => {\r\n    return self.indexOf(value) === index;\r\n  });\r\n\r\n  const [parameterSet, setParameterSet] = React.useState(script?.defaultParameterSet || (parameterSets && parameterSets[0]));\r\n  const { form, onOk } = useModalContext();\r\n\r\n  const serializeParameter = (parameter) => {\r\n    const value = form.getFieldValue(parameter?.name) !== null ? form.getFieldValue(parameter?.name) : parameter?.defaultValue\r\n\r\n    if (parameter?.type === 'System.String[]')\r\n      return JSON.stringify(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleOk() {\r\n    onOk(`/script/path/${script?.fullPath}`, \"create\", {\r\n      jobParameters: script?.scriptParameters?.filter(m => m.parameterSet === parameterSet || m.parameterSet === 'Default').map(parameter => ({\r\n        name: parameter?.name,\r\n        type: parameter.type,\r\n        value: serializeParameter(parameter),\r\n        displayType: parameter.displayType\r\n      }))\r\n    } as JobContext);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\", \"Execute\"]} requiredAccessControls={AccessControlTypes.Execute} accessControls={script?.accessControls} allowedWithOneWayGitSync={true}>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlayCircleFilled />}\r\n          {...props}\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title={`Run ${script?.fullPath}`} onClickOk={handleOk} width={script?.scriptParameters?.length !== 0 ? 1000 : 500}>\r\n        <Row style={{ marginBottom: '10px' }}>\r\n          <Col span={6}>\r\n          </Col>\r\n          <Col span={18}>\r\n            {script?.longDescription}\r\n            {script?.links?.map(link => <p><a href={link} target=\"_blank\" rel=\"noreferrer\">{link}</a></p>)}\r\n          </Col>\r\n        </Row>\r\n\r\n        {parameterSets?.length > 1 && (\r\n          <Row style={{ marginBottom: '20px' }}>\r\n            <Col span={6} style={{ textAlign: 'right', paddingRight: '10px' }}>\r\n              <Typography>Parameter Set:</Typography>\r\n            </Col>\r\n            <Col span={18}>\r\n              <Select id=\"parameterSet\" onChange={(e) => setParameterSet(e.toString())} value={parameterSet} style={{ width: '100%' }} defaultValue={script?.defaultParameterSet}>\r\n                {parameterSets?.map(parameterSet => <Select.Option key={parameterSet} value={parameterSet}>{parameterSet}</Select.Option>)}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        <ParametersForm\r\n          parameters={script?.scriptParameters?.filter(parameter => parameterSets?.length === 0 || parameter.parameterSet === parameterSet || parameter.parameterSet === 'Default')}\r\n          form={form}\r\n          showGoTo={true}\r\n          script={script}\r\n        />\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Tag, Space, Tooltip, PageHeader, Button, Tree, Layout, Select, Typography } from \"antd\";\r\nimport { CustomColumns, Folder, FolderType, Script } from \"types\";\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\r\nimport RunScript from \"./components/RunScript\";\r\nimport { FolderViewOutlined, LinkOutlined, PlayCircleFilled } from \"@ant-design/icons\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { SiderTheme } from \"antd/es/layout/Sider\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\nconst Table = React.lazy(() => import(\"components/ui/Table\"));\r\nconst EditModal = React.lazy(() => import(\"components/ui/EditModal\"));\r\nconst FolderModal = React.lazy(() => import(\"components/modals/folder-modal\"));\r\nconst ScriptModal = React.lazy(() => import(\"./components/scriptModal\"));\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\nconst EditorButton = React.lazy(() => import(\"components/ui/EditorButton\"));\r\n\r\nconst { DirectoryTree } = Tree;\r\nconst { Option } = Select;\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(localizedFormat);\r\n\r\nexport default function Scripts() {\r\n  const storedView = localStorage.getItem('script-view');\r\n  const [tags, setTags] = React.useState([]);\r\n  const [folder, setFolder] = React.useState('');\r\n  const [view, setView] = React.useState(storedView || 'folder');\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { settings } = useAppStore();\r\n  const { data: folders, isLoading: isFoldersLoading } = useQuery<Folder[]>(\"/folder\");\r\n  const { data: scripts, isLoading } = useQuery<Script[]>(\"/script\", {\r\n    select: (data) =>\r\n      data.map((script) => ({\r\n        ...script,\r\n        environment:\r\n          script.environment === \"Default\" ? null : script.environment,\r\n      })),\r\n  });\r\n\r\n  const changeView = (view: string) => {\r\n    localStorage.setItem('script-view', view);\r\n    setView(view);\r\n  }\r\n\r\n  const toTreeStructure = isFoldersLoading ? () => [] : () => {\r\n    let children = [];\r\n    let level = { title: 'Repository', key: '', children };\r\n\r\n    folders.filter(x => x.type === FolderType.Script).forEach(folder => {\r\n      folder.path.split(settings?.pathDivider).reduce((r, name, i, a) => {\r\n        if (!r[name]) {\r\n          r[name] = { children: [] };\r\n          r.children.push({ title: name, key: folder.path, children: r[name].children })\r\n        }\r\n\r\n        return r[name];\r\n      }, level)\r\n    })\r\n\r\n    return [level];\r\n  }\r\n\r\n  const treeData = toTreeStructure();\r\n\r\n  const columns: CustomColumns<Script>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      key: \"fullPath\",\r\n      title: \"Path\",\r\n      dataIndex: \"fullPath\",\r\n    },\r\n    {\r\n      key: \"description\",\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n    },\r\n    {\r\n      key: \"environment\",\r\n      title: \"Environment\",\r\n      dataIndex: \"environment\",\r\n      width: \"min-content\",\r\n      align: \"center\",\r\n      render: (text, record) =>\r\n        record?.environment === null ? \"Default\" : record?.environment,\r\n    },\r\n    {\r\n      key: \"tags\",\r\n      title: \"Tags\",\r\n      dataIndex: \"tags\",\r\n      editable: false,\r\n      render: (value, record: Script) => {\r\n        return record.tag?.length > 0\r\n          ? record?.tag?.map((tag) => (\r\n            <Tag key={tag?.name} color={tag?.color} style={{ cursor: 'pointer' }} onClick={() => {\r\n              if (!tags.find(m => m.name === tag.name)) {\r\n                setTags([...tags, tag]);\r\n              }\r\n            }}>\r\n              {tag?.name}\r\n            </Tag>\r\n          ))\r\n          : null;\r\n      },\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Modal key={record.id + \"run\"}>\r\n              <Tooltip title=\"Invoke script\">\r\n                <RunScript\r\n                  accessControls={record?.accessControls}\r\n                  script={record}\r\n                  icon={<PlayCircleFilled />}\r\n                  type=\"text\"\r\n                />\r\n              </Tooltip>\r\n            </Modal>\r\n            <Modal key={record.id + \"edit\"}>\r\n              <EditModal\r\n                accessControls={record?.accessControls}\r\n                record={record}\r\n                allowedWithOneWayGitSync={false}\r\n              />\r\n            </Modal>\r\n            <EditorButton\r\n              allowedWithOneWayGitSync={false}\r\n              accessControls={record?.accessControls}\r\n              to={record?.fullPath}\r\n            />\r\n            <DeleteButton\r\n              allowedWithOneWayGitSync={false}\r\n              resource={{\r\n                ...record,\r\n                resourceInfo: {\r\n                  ...record?.resourceInfo,\r\n                  self: `${record?.resourceInfo?.parent}/${record?.id}`,\r\n                },\r\n              }}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const filterScripts = () => {\r\n    const taggedScripts = scripts?.filter((script) => tags.length === 0 || (script.tag && script.tag?.find(m => tags.find(tag => tag.name === m.name))))\r\n    return taggedScripts?.filter(script => view === 'list' || ((folder !== '' && script.fullPath.startsWith(folder)) || (folder === '' && script.fullPath.indexOf(settings?.pathDivider) === -1)));\r\n  }\r\n\r\n  return (\r\n    <PageHeader title=\"Scripts\" subTitle=\"PowerShell scripts that can be manually executed or scheduled.\" extra={[\r\n      <Button key=\"scripts-documentation\" icon={<LinkOutlined />} href=\"https://docs.powershelluniversal.com/automation/scripts\" target=\"_blank\">Documentation</Button>\r\n    ]} style={{ height: '100%' }} >\r\n      <Layout hasSider={treeData?.length > 0 && view === 'folder'} style={{ height: '100%', backgroundColor: currentTheme === \"dark\" ? \"#141414\" : \"white\" }}>\r\n        {treeData?.length > 0 && view === 'folder' && (<Layout.Sider theme={currentTheme as SiderTheme}>\r\n          <div style={{ width: '100%' }}>\r\n\r\n            <div className=\"ant-table-title\" style={{ backgroundColor: currentTheme === \"dark\" ? \"#141414\" : \"white\", width: '100%', height: '64px', padding: '20px' }}>\r\n              <Typography>Folders</Typography>\r\n            </div>\r\n            <div style={{ height: '54px', backgroundColor: currentTheme === \"dark\" ? \"#1d1d1d\" : \"#fafafa\" }}></div>\r\n            <DirectoryTree defaultExpandAll treeData={treeData} onSelect={(keys) => setFolder(keys[0].toString())} style={{ height: '100%' }} />\r\n          </div>\r\n        </Layout.Sider>)\r\n        }\r\n        < Layout.Content >\r\n          <Table\r\n            title=\"Scripts\"\r\n            actions={[\r\n              tags.map(tag => {\r\n                return (\r\n                  <Tag color={tag.color}\r\n                    closable\r\n                    onClose={() => {\r\n                      setTags(tags.filter(m => m.name !== tag.name));\r\n                    }}>{tag.name}</Tag>\r\n                )\r\n              }),\r\n              <Modal key=\"folder-modal\">\r\n                <FolderModal parentPath={folder} type={FolderType.Script} />\r\n              </Modal>,\r\n              <Modal key=\"script-modal\">\r\n                <ScriptModal folderPath={folder} />\r\n              </Modal>,\r\n              <Select value={view} onChange={changeView} suffixIcon={<FolderViewOutlined />} key=\"view-select\">\r\n                <Option value=\"folder\">Folder</Option>\r\n                <Option value=\"list\">List</Option>\r\n              </Select>\r\n            ]}\r\n            data={filterScripts()}\r\n            columns={columns}\r\n            loading={isLoading}\r\n          />\r\n        </Layout.Content>\r\n      </Layout >\r\n    </PageHeader >\r\n  );\r\n}\r\n"],"sourceRoot":""}