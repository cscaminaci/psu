{"version":3,"sources":["components/dashboard/components/DashboardTerminal.tsx","components/pages/notLicensed.tsx"],"names":["fitAddon","FitAddon","searchAddon","SearchAddon","webLinksAddon","WebLinksAddon","sendToTerminal","command","id","a","axios","method","url","data","response","DashboardTerminal","xtermRef","React","useRef","xtermCommandRef","licensed","useAppStore","useParams","status","useQuery","enabled","Feature","Dashboard","select","refetchOnMount","refetchOnWindowFocus","send","useMutation","cmd","onError","error","variables","context","message","mutateAsync","useEffect","termRefVar","current","terminal","writeln","write","onKey","key","toLocaleLowerCase","clear","i","length","parseInt","then","buffer","active","cursorX","substr","dispose","ref","addons","options","cols","cursorBlink","title","NotLicensed","extra","icon","onClick","window","location","href"],"mappings":"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","file":"static/js/41.f68ed8ab.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { Dashboard, Feature } from \"types\";\r\nimport NotLicensed from \"components/pages/notLicensed\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMutation, useQuery } from \"react-query3\";\r\nimport { WebLinksAddon } from \"xterm-addon-web-links\";\r\nimport { FitAddon } from \"xterm-addon-fit\";\r\nimport { SearchAddon } from \"xterm-addon-search\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { message } from \"antd\";\r\nimport { XTerm } from \"xterm-for-react\";\r\n\r\n// const terminal = new Terminal();\r\nconst fitAddon = new FitAddon();\r\nconst searchAddon = new SearchAddon();\r\nconst webLinksAddon = new WebLinksAddon();\r\n\r\nasync function sendToTerminal(command: string, id: number) {\r\n  var response = await axios({\r\n    method: \"post\",\r\n    url: `/api/v1/dashboard/${id}/terminal`,\r\n    data: { command },\r\n  });\r\n  return response.data;\r\n}\r\n\r\nconst DashboardTerminal = () => {\r\n  const xtermRef = React.useRef<XTerm>(null);\r\n  const xtermCommandRef = React.useRef<string>(\"\");\r\n  const { licensed } = useAppStore();\r\n  const { id } = useParams();\r\n\r\n  const { data: status } = useQuery<any>(`/dashboard/${id}`, {\r\n    enabled: !!id && licensed(Feature.Dashboard),\r\n    select: (data: Dashboard) => {\r\n      return data?.status;\r\n    },\r\n    refetchOnMount: false,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  const { mutateAsync: send } = useMutation(\r\n    async ({ id, cmd }: { id: number; cmd: string }) =>\r\n      await sendToTerminal(cmd, id),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Command faild; ${error?.message}`);\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!licensed(Feature.Dashboard)) return;\r\n    let termRefVar = xtermRef.current;\r\n    if (status !== 1) {\r\n      xtermRef.current.terminal.writeln(\"Dashboard not running.\");\r\n    } else {\r\n      xtermRef.current.terminal.writeln(\r\n        \"Connected to the Universal Dashboard Admin Terminal\"\r\n      );\r\n      xtermRef.current.terminal.write(\"PS> \");\r\n\r\n      xtermRef.current.terminal.onKey((key) => {\r\n        const terminal = xtermRef.current.terminal;\r\n\r\n        if (key.key === \"\\r\") {\r\n          if (xtermCommandRef.current.toLocaleLowerCase() === \"cls\" || xtermCommandRef.current.toLocaleLowerCase() === \"clear-host\") {\r\n            terminal.clear();\r\n            for (let i = 0; i < 4 + xtermCommandRef.current.length; i++) {\r\n              terminal.write('\\b \\b');\r\n            }\r\n\r\n            terminal.write(\"PS> \");\r\n            xtermCommandRef.current = \"\";\r\n            return;\r\n          }\r\n\r\n          send({ id: parseInt(id), cmd: xtermCommandRef.current }).then(\r\n            (response) => {\r\n              terminal.writeln(response);\r\n              terminal.write(\"PS> \");\r\n              xtermCommandRef.current = \"\";\r\n            }\r\n          );\r\n        }\r\n\r\n        // escape\r\n        if (key.key === \"\\x1B\") {\r\n          if (xtermCommandRef.current.length > 0) {\r\n            for (let i = 0; i < xtermCommandRef.current.length; i++) {\r\n              terminal.write('\\b \\b');\r\n            }\r\n            xtermCommandRef.current = \"\";\r\n          }\r\n          return;\r\n        }\r\n\r\n        //backspace\r\n        if (key.key === \"\\x7F\" && terminal.buffer.active.cursorX > 4) {\r\n          if (xtermCommandRef.current.length > 0) {\r\n            xtermCommandRef.current = xtermCommandRef.current.substr(0, xtermCommandRef.current.length - 1);\r\n          }\r\n          terminal.write('\\b \\b');\r\n          return;\r\n        }\r\n\r\n        xtermRef.current.terminal.write(key.key);\r\n        xtermCommandRef.current = xtermCommandRef.current + key.key;\r\n      });\r\n    }\r\n    return () => termRefVar.terminal.dispose();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id, status]);\r\n\r\n  if (!licensed(Feature.Dashboard)) {\r\n    return (\r\n      <NotLicensed title=\"Console is only available for licensed instances.\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <XTerm\r\n      ref={xtermRef}\r\n      addons={[searchAddon, fitAddon, webLinksAddon]}\r\n      options={{\r\n        cols: 80,\r\n        cursorBlink: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DashboardTerminal;\r\n","import React from \"react\";\r\nimport { Result, Button } from \"antd\";\r\nimport { CreditCardOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function NotLicensed({ title }) {\r\n  return (\r\n    <Result\r\n      title={title}\r\n      status=\"warning\"\r\n      extra={\r\n        <Button\r\n          icon={<CreditCardOutlined />}\r\n          onClick={() => {\r\n            window.location.href =\r\n              \"https://ironmansoftware.com/powershell-universal?rel=product\";\r\n          }}\r\n        >\r\n          Buy License\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n"],"sourceRoot":""}