{"version":3,"sources":["components/ui/ResourceInfo.tsx","components/dashboard/components/PowerButton.tsx","components/dashboard/components/DashboardViewButton.tsx","components/dashboard/components/DashboardViews.tsx","components/dashboard/ComponentsDrawer.tsx","components/dashboard/dashboard.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/Editor.tsx"],"names":["ResourceInfo","props","navigate","useNavigate","bordered","bodyStyle","padding","ghost","onBack","PowerButton","dashboard","allowedWithOneWayGitSync","useMutation","dashboardId","axios","put","then","res","data","onError","error","variables","context","message","onSuccess","queryClient","refetchQueries","stale","active","inactive","isStarting","isLoading","start","mutateAsync","isRestarting","restart","delete","isStoping","stop","requiredRoles","title","getPopupContainer","document","getElementsByTagName","placement","trigger","overlay","onClick","key","id","Item","disabled","status","icon","loading","type","DashboardViewButton","href","baseUrl","target","DashboardTerminal","lazy","DashboardSettings","DashboardOutput","DashboardEndpoints","DashboardSessions","DashboardComponents","TimestampToggle","DashboardViews","useState","current","setCurrent","showTimestamp","setShowTimestamp","usePageContext","resource","tabs","tab","dashboardComponents","length","views","settings","log","console","endpoints","sessions","modules","headStyle","borderBottom","height","paddingTop","tabList","activeTabKey","onTabChange","tabProps","tabBarStyle","tabBarExtraContent","isVisible","setIsVisible","Loader","tip","ComponentsDrawer","useParams","useQuery","enabled","components","isOpen","setIsOpen","selectedComponents","setSelectedComponents","selectedRowKeys","setSelectedRowKeys","setQueryData","columns","dataIndex","render","_","record","some","component","CheckCircleOutlined","color","MinusCircleOutlined","danger","DeleteOutlined","comp","filter","x","action","Fragment","rowSelection","onChange","selectedRows","selectedModules","map","resourceInfo","getCheckboxProps","install","name","AppstoreAddOutlined","visible","closable","width","onClose","Title","Paragraph","to","GiftOutlined","Table","actions","PlusCircleOutlined","rowKey","DashboardPage","Page","capitalize","subTitle","tags","setStatusColor","extra","Group","psuDark","base","inherit","rules","token","foreground","colors","psuLight","loader","config","paths","vs","init","monaco","languages","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","model","options","a","post","getValue","headers","text","range","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","position","findIndex","triggerCharacter","content","cursorPosition","getOffsetAt","suggestions","insertText","label","documentation","help","kind","CompletionItemKind","Property","incomplete","EditorContext","React","createContext","CodeEditor","children","refetch","isReadOnly","setIsReadOnly","isSaving","setIsSaving","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","success","editorRef","useRef","onSave","useCallback","self","startsWith","schemaName","preserveBOM","lineEnding","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","parent","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","useEffect","defineTheme","setTheme","onCopy","zoomIn","zoomOut","value","useMemo","Provider","SaveButton","child","requiredAccessControls","AccessControlTypes","Edit","accessControls","cloneElement","SaveFilled","callAll","BaseEditor","useContext","theme","language","onMount","FullEditor","showSave","hideToolbar","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","wordWrap","wrappingIndent","minimap","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"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","file":"static/js/15.07cf1743.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, PageHeaderProps, PageHeader } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResourceInfo(props: PageHeaderProps & { children?: React.ReactNode }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Card bordered={false} bodyStyle={{padding: 0}}>\r\n      <PageHeader {...props} ghost={true} onBack={() => navigate(-1)} />\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n  PauseCircleOutlined,\r\n  PlayCircleOutlined,\r\n  PoweroffOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Dropdown, Menu, message, Tooltip } from \"antd\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport React from \"react\";\r\nimport { useMutation } from \"react-query3\";\r\nimport { Dashboard } from \"types\";\r\n\r\nexport default function PowerButton({ dashboard, allowedWithOneWayGitSync }: { dashboard: Dashboard, allowedWithOneWayGitSync?: boolean }) {\r\n  const { isLoading: isStarting, mutateAsync: start } = useMutation(\r\n    (dashboardId: number) =>\r\n      axios\r\n        .put(`/api/v1/dashboard/${dashboardId}/status`)\r\n        .then((res: AxiosResponse<Dashboard>) => res.data),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Dashboard ${variables}; ${error?.message}`);\r\n      },\r\n      onSuccess: (data, variables) => {\r\n        //queryClient.setQueryData(`/dashboard/${variables}`, data);\r\n        queryClient.refetchQueries(`/dashboard/${variables}`);\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/memory`, {\r\n          stale: true,\r\n          active: true,\r\n          inactive: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/endpoints`, {\r\n          stale: true,\r\n          active: true,\r\n          inactive: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/sessions`, {\r\n          stale: true,\r\n          active: true,\r\n          inactive: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard`, { stale: true });\r\n      },\r\n    }\r\n  );\r\n\r\n  const { isLoading: isRestarting, mutateAsync: restart } = useMutation(\r\n    (dashboardId: number) =>\r\n      axios\r\n        .put(`/api/v1/dashboard/${dashboardId}/status/restart`)\r\n        .then((res: AxiosResponse<Dashboard>) => res.data),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Dashboard ${variables}; ${error?.message}`);\r\n      },\r\n      onSuccess: (data, variables) => {\r\n        //queryClient.setQueryData(`/dashboard/${variables}`, data);\r\n        queryClient.refetchQueries(`/dashboard`, { stale: true });\r\n        queryClient.refetchQueries(`/dashboard/${variables}`, { stale: true });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/endpoints`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/sessions`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/memory`, {\r\n          stale: true,\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const { isLoading: isStoping, mutateAsync: stop } = useMutation(\r\n    (dashboardId: number) =>\r\n      axios\r\n        .delete(`/api/v1/dashboard/${dashboardId}/status`)\r\n        .then((res: AxiosResponse<Dashboard>) => res.data),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Dashboard ${variables}; ${error?.message}`);\r\n      },\r\n      onSuccess: (data, variables) => {\r\n        //queryClient.setQueryData(`/dashboard/${variables}`, data);\r\n        queryClient.refetchQueries(`/dashboard`, { stale: true });\r\n        queryClient.refetchQueries(`/dashboard/${variables}`);\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/endpoints`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/sessions`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/memory`, {\r\n          stale: true,\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const onClick = (key) => {\r\n    return key === \"start\"\r\n      ? start(dashboard?.id)\r\n      : key === \"stop\"\r\n        ? stop(dashboard?.id)\r\n        : key === \"restart\"\r\n          ? restart(dashboard?.id)\r\n          : null;\r\n  };\r\n\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Operator\", \"Administrator\"]} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n      <Tooltip title=\"Power\">\r\n        <Dropdown\r\n          getPopupContainer={() => document.getElementsByTagName(\"body\")[0]}\r\n          placement=\"bottomCenter\"\r\n          trigger={[\"click\"]}\r\n          overlay={() => (\r\n            <Menu onClick={({ key }) => onClick(key)} key={dashboard?.id}>\r\n              <Menu.Item\r\n                disabled={dashboard?.status === 1}\r\n                key=\"start\"\r\n                icon={<PlayCircleOutlined />}\r\n              >\r\n                Start\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                disabled={dashboard?.status === 0}\r\n                key=\"stop\"\r\n                icon={<PauseCircleOutlined />}\r\n              >\r\n                Stop\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                disabled={dashboard?.status === 0}\r\n                key=\"restart\"\r\n                icon={<ReloadOutlined />}\r\n              >\r\n                Restart\r\n              </Menu.Item>\r\n            </Menu>\r\n          )}\r\n        >\r\n          <Button\r\n            loading={isStoping || isStarting || isRestarting}\r\n            icon={<PoweroffOutlined />}\r\n            type=\"text\"\r\n          />\r\n        </Dropdown>\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import { GlobalOutlined } from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, Tooltip } from \"antd\";\r\nimport React from \"react\";\r\nimport { Dashboard } from \"types\";\r\n\r\ntype DashboardViewButtonProps = {\r\n    dashboard: Dashboard;\r\n  } & ButtonProps;\r\n\r\n  export default function DashboardViewButton({\r\n    dashboard,\r\n    ...props\r\n  }: DashboardViewButtonProps) {\r\n    return (\r\n      <Tooltip title=\"View\">\r\n        <Button\r\n          {...props}\r\n          icon={<GlobalOutlined />}\r\n          type=\"text\"\r\n          href={`${dashboard?.baseUrl}`}\r\n          target=\"_blank\"\r\n        />\r\n      </Tooltip>\r\n    );\r\n  }","import React, { lazy, useState } from \"react\";\r\nimport { Button, Card, Space } from \"antd\";\r\nimport Loader from \"../../utils/Loader\";\r\nimport { RightPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport { CardTabListType } from \"antd/es/card\";\r\n\r\nconst DashboardTerminal = lazy(() => import(\"./DashboardTerminal\"));\r\nconst DashboardSettings = lazy(() => import(\"./DashoardbSettings\"));\r\nconst DashboardOutput = lazy(() => import(\"./DashboardOutput\"));\r\nconst DashboardEndpoints = lazy(() => import(\"./Endpoints\"));\r\nconst DashboardSessions = lazy(() => import(\"./Sessions\"));\r\nconst DashboardComponents = lazy(() => import(\"./DashboardComponents\"));\r\nconst TimestampToggle = lazy(() => import(\"../../ui/TimestampToggle\"));\r\n\r\nexport default function DashboardViews() {\r\n  const [current, setCurrent] = useState(\"settings\");\r\n  const [showTimestamp, setShowTimestamp] = useState(true);\r\n  const { resource: dashboard } = usePageContext();\r\n\r\n  const tabs: CardTabListType[] = [\r\n    {\r\n      key: \"settings\",\r\n      tab: \"Settings\",\r\n    },\r\n    {\r\n      key: \"log\",\r\n      tab: \"Log\",\r\n    },\r\n    {\r\n      key: \"console\",\r\n      tab: \"Console\",\r\n    },\r\n    {\r\n      key: \"endpoints\",\r\n      tab: \"Endpoints\",\r\n    },\r\n    {\r\n      key: \"sessions\",\r\n      tab: \"Sessions\",\r\n    },\r\n    {\r\n      key: \"modules\",\r\n      tab: \"Modules\",\r\n      disabled:\r\n        dashboard?.dashboardComponents?.length < 0 ||\r\n        (dashboard?.dashboardComponents?.length > 0 &&\r\n          dashboard?.dashboardComponents[0] === null),\r\n    },\r\n  ];\r\n\r\n  const views = {\r\n    settings: <DashboardSettings />,\r\n    log: <DashboardOutput showTimestamp={showTimestamp} />,\r\n    console: <DashboardTerminal />,\r\n    endpoints: <DashboardEndpoints />,\r\n    sessions: <DashboardSessions />,\r\n    modules: <DashboardComponents />,\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      headStyle={{ borderBottom: 0, height: 64 }}\r\n      bodyStyle={current === \"log\" ? { padding: 0 } : { paddingTop: 24 }}\r\n      tabList={tabs}\r\n      activeTabKey={current}\r\n      onTabChange={(key) => setCurrent(key)}\r\n      tabProps={{\r\n        type: \"line\",\r\n        tabBarStyle: { height: 64 },\r\n      }}\r\n      tabBarExtraContent={\r\n        <Space>\r\n          <TimestampToggle\r\n            isVisible={showTimestamp}\r\n            setIsVisible={() => setShowTimestamp(!showTimestamp)}\r\n          />\r\n          <RightPanelSizeButton>\r\n            <Button />\r\n          </RightPanelSizeButton>\r\n        </Space>\r\n      }\r\n    >\r\n      <Loader tip={`Loading ${current}`}>{views[current]}</Loader>\r\n    </Card>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { CustomColumns, Dashboard, Module } from \"../../types\";\r\nimport { useParams } from \"react-router\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  MinusCircleOutlined,\r\n  GiftOutlined,\r\n  PlusCircleOutlined,\r\n  AppstoreAddOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Tag, Drawer, Typography, Button, Tooltip } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query3\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport Table from \"components/ui/Table\";\r\n\r\nexport default function ComponentsDrawer() {\r\n  const { id } = useParams();\r\n  const { data: dashboard } = useQuery<Dashboard>(`/dashboard/${id}`, {\r\n    enabled: !!id,\r\n  });\r\n  const { data: components } = useQuery<Module[]>(`/dashboardcomponent`, {\r\n    enabled: !!id,\r\n  });\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedComponents, setSelectedComponents] = useState<Module[] | null>(\r\n    []\r\n  );\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const { mutateAsync, isLoading } = useMutation({\r\n    onSuccess: (data) => {\r\n      queryClient.setQueryData(`/dashboard/${id}`, data);\r\n      queryClient.refetchQueries(`/dashboard`);\r\n    },\r\n  });\r\n\r\n  const columns: CustomColumns<Module>[] = [\r\n    {\r\n      dataIndex: \"name\",\r\n      title: \"Name\",\r\n    },\r\n    {\r\n      dataIndex: \"version\",\r\n      title: \"Version\",\r\n    },\r\n    {\r\n      dataIndex: \"actions\",\r\n      render: (_, record) => {\r\n        return dashboard?.dashboardComponents?.some(\r\n          (component) => component?.id === record?.id\r\n        ) ? (\r\n          <Tag icon={<CheckCircleOutlined />} color=\"success\">\r\n            Added\r\n          </Tag>\r\n        ) : (\r\n          <Tag icon={<MinusCircleOutlined />} color=\"processing\">\r\n            Not added\r\n          </Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataIndex: 'remove',\r\n      render: (_, record) => {\r\n        return dashboard?.dashboardComponents?.some(\r\n          (component) => component?.id === record?.id\r\n        ) ? (\r\n          <Button\r\n            danger\r\n            icon={<DeleteOutlined />}\r\n            loading={isLoading}\r\n            onClick={() => {\r\n              let comp = dashboard?.dashboardComponents.filter(x => x.id !== record?.id)\r\n              mutateAsync({\r\n                key: `/dashboard/${id}`,\r\n                action: \"update\",\r\n                ...{\r\n                  ...dashboard,\r\n                  dashboardComponents: comp,\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        ) : (\r\n          <React.Fragment />\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: selectedRowKeys,\r\n    onChange: (selectedRowKeys: React.Key[], selectedRows: Module[]) => {\r\n      setSelectedRowKeys(selectedRowKeys);\r\n      let selectedModules = selectedRows?.map(\r\n        ({ resourceInfo, ...rest }) => rest\r\n      );\r\n      setSelectedComponents(selectedModules);\r\n    },\r\n    getCheckboxProps: (record: Module) => ({\r\n      disabled: dashboard?.dashboardComponents?.some(\r\n        (install) => install?.id === record?.id\r\n      ),\r\n      name: record?.name,\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tooltip title=\"Add components\">\r\n        <Button\r\n          icon={<AppstoreAddOutlined />}\r\n          type=\"text\"\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n      </Tooltip>\r\n      <Drawer\r\n        title=\"Add Components\"\r\n        visible={isOpen}\r\n        closable\r\n        width={1000}\r\n        onClose={() => setIsOpen(false)}\r\n      >\r\n        <React.Fragment>\r\n          <Typography>\r\n            <Typography.Title>About Components</Typography.Title>\r\n            <Typography.Paragraph>\r\n              You can select components that you want to add to this dashboard.\r\n              Components are external PowerShell modules that are hosted in the\r\n              Universal Dashboard Marketplace. If you want to add more\r\n              components to the table below, you can navigate to the marketplace\r\n              page by clicking the Marketplace button\r\n            </Typography.Paragraph>\r\n            <Link to=\"/admin/dashboards/marketplace\">\r\n              <Button type=\"default\" icon={<GiftOutlined />}>\r\n                Marketplace\r\n              </Button>\r\n            </Link>\r\n          </Typography>\r\n          <Table\r\n            title=\"Installed Components\"\r\n            actions={[\r\n              <Button\r\n                type=\"primary\"\r\n                loading={isLoading}\r\n                disabled={\r\n                  components?.length === dashboard?.dashboardComponents?.length\r\n                }\r\n                icon={<PlusCircleOutlined />}\r\n                onClick={() => {\r\n                  let comp = dashboard?.dashboardComponents\r\n                    ? [...dashboard.dashboardComponents, ...selectedComponents]\r\n                    : selectedComponents;\r\n                  mutateAsync({\r\n                    key: `/dashboard/${id}`,\r\n                    action: \"update\",\r\n                    ...{\r\n                      ...dashboard,\r\n                      dashboardComponents: comp,\r\n                    },\r\n                  });\r\n                  setSelectedRowKeys([]);\r\n                }}\r\n              >\r\n                Add\r\n              </Button>,\r\n            ]}\r\n            rowKey={(record: Module) => record?.id}\r\n            columns={columns}\r\n            data={components}\r\n            rowSelection={{ ...rowSelection }}\r\n          />\r\n        </React.Fragment>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dashboard } from \"../../types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query3\";\r\nimport Page, {\r\n  LeftPanel,\r\n  PageContentBase,\r\n  PageHeader,\r\n  RightPanel,\r\n} from \"components/pages/Page\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport ResourceInfo from \"components/ui/ResourceInfo\";\r\nimport DashboardViews from \"./components/DashboardViews\";\r\nimport { Button } from \"antd\";\r\nimport PowerButton from \"./components/PowerButton\";\r\nimport ComponentsDrawer from \"./ComponentsDrawer\";\r\nimport DashboardViewButton from \"./components/DashboardViewButton\";\r\nimport { capitalize, setStatusColor } from \"components/utils/utils\";\r\n\r\nconst DashboardPage = () => {\r\n  const { id } = useParams();\r\n  const { data: dashboard } = useQuery<Dashboard>(`/dashboard/${id}`, {\r\n    enabled: !!id,\r\n  });\r\n\r\n\r\n  return (\r\n    <Page resource={dashboard}>\r\n      <PageHeader>\r\n        <ResourceInfo\r\n          title={capitalize(dashboard?.name)}\r\n          subTitle={`#${dashboard?.id}`}\r\n          tags={setStatusColor(dashboard?.status)}\r\n          extra={\r\n            <Button.Group>\r\n              <ComponentsDrawer />\r\n              <DashboardViewButton dashboard={dashboard} />\r\n              <PowerButton dashboard={dashboard} />\r\n            </Button.Group>\r\n          }\r\n        />\r\n      </PageHeader>\r\n      <PageContentBase>\r\n        <LeftPanel>\r\n          <CodeEditor>\r\n            <FullEditor title=\"Code Editor\" />\r\n          </CodeEditor>\r\n        </LeftPanel>\r\n        <RightPanel>\r\n          <DashboardViews />\r\n        </RightPanel>\r\n      </PageContentBase>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\n\r\nloader.config({ paths: { vs: \"/admin/vs\" } });\r\nloader.init().then(monaco => {\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(`/api/v1/editor/format`, model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(`/api/v1/editor/complete`, {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: monaco.languages.CompletionItemKind.Property,\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { } }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(false);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      model.onDidChangeContent(() => {\r\n        var versionId = model.getVersionId();\r\n        debounce(async () => {\r\n          var newVersionId = model.getVersionId();\r\n          if (versionId !== newVersionId) return;\r\n\r\n          let { data } = await axios.post(`/api/v1/editor/parse`, model.getValue(), {\r\n            headers: {\r\n              'content-type': 'text/plain'\r\n            }\r\n          });\r\n\r\n          const markerData = data.map(x => {\r\n            return {\r\n              startColumn: x.token.startColumn,\r\n              endColumn: x.token.endColumn,\r\n              startLineNumber: x.token.startLine,\r\n              endLineNumber: x.token.endLine,\r\n              severity: MarkerSeverity.Error,\r\n              message: x.message\r\n            }\r\n          });\r\n\r\n          monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n        }, 300)();\r\n\r\n      });\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const { resource } = usePageContext();\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}