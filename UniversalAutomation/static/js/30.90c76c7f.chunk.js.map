{"version":3,"sources":["components/ui/EnvironmentSelectBox.tsx","components/ui/CredentialsSelectBox.tsx","components/scripts/components/scriptParameters.tsx","components/scripts/components/RunScript.tsx"],"names":["EnvironmentSelectBox","props","useQuery","data","isLoading","loading","Option","value","map","env","name","CredentialsSelectBox","variables","credentials","filter","variable","type","disableRunAsSupport","Fragment","cred","length","to","style","float","padding","ParametersForm","parameters","form","showGoTo","script","defaultValues","parameter","displayType","defaultValue","layout","labelCol","span","wrapperCol","initialValues","gotoJob","environment","itemProps","Item","label","displayName","required","tooltip","helpText","rules","message","showTime","format","validValues","validValue","mode","tokenSeparators","id","credential","valuePropName","RunScript","parameterSets","scriptParameters","m","parameterSet","x","index","self","indexOf","React","useState","defaultParameterSet","setParameterSet","useModalContext","onOk","serializeParameter","getFieldValue","JSON","stringify","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Execute","accessControls","allowedWithOneWayGitSync","icon","PlayCircleFilled","title","fullPath","onClickOk","jobParameters","width","marginBottom","longDescription","links","link","href","target","rel","textAlign","paddingRight","onChange","e","toString"],"mappings":"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","file":"static/js/30.90c76c7f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Environment } from \"../../types\";\r\n\r\nexport default function EnvironmentSelectBox(props) {\r\n  const { data, isLoading } = useQuery<Environment[]>(\"/environment\");\r\n  return (\r\n    <Select {...props} loading={isLoading}>\r\n      <Select.Option key={`default`} value={null}>Default</Select.Option>\r\n      {data?.map((env) => (\r\n        <Select.Option key={env.name} value={env.name}>{env.name}</Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { Variable } from \"types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CredentialsSelectBox(props) {\r\n  const { data: variables } = useQuery<Variable[]>(\"/variable\");\r\n\r\n  const credentials = variables?.filter(\r\n    (variable) => variable.type === \"PSCredential\" && !variable.disableRunAsSupport\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Select {...props}>\r\n        <Select.Option key={`default`} value={null}>Default</Select.Option>\r\n        {credentials?.map((cred) => (\r\n          <Select.Option key={cred.name} value={cred.name}>\r\n            {cred.name}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>\r\n      {credentials?.length === 0 && (\r\n        <Link to=\"/admin/platform/variables\" style={{ float: 'right', padding: 0 }}>Add Run As Credential</Link>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { FormInstance } from \"antd/es/form/Form\";\r\nimport { Script, ScriptParameter } from \"types\";\r\nimport CredentialsSelectBox from \"components/ui/CredentialsSelectBox\";\r\nimport EnvironmentSelectBox from \"components/ui/EnvironmentSelectBox\";\r\nexport default function ParametersForm({\r\n  parameters,\r\n  form,\r\n  showGoTo,\r\n  script\r\n}: {\r\n  parameters: ScriptParameter[];\r\n  form: FormInstance;\r\n  showGoTo: boolean;\r\n  script: Script;\r\n}) {\r\n  const defaultValues = parameters?.filter(parameter => parameter.displayType !== 3).map((parameter) => ({\r\n    [parameter.name]: parameter.defaultValue,\r\n  }));\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"horizontal\"\r\n      name=\"dynamic_parameters_form\"\r\n      labelCol={{ span: 6 }}\r\n      wrapperCol={{ span: 18 }}\r\n      initialValues={{\r\n        ...defaultValues,\r\n        gotoJob: true,\r\n        environment: \"Default\",\r\n      }}\r\n    >\r\n      {parameters?.map((parameter) => {\r\n\r\n        var itemProps = {};\r\n        if (parameter.displayType !== 3 && parameter.defaultValue) {\r\n          itemProps[\"initialValue\"] = parameter.defaultValue;\r\n        }\r\n\r\n\r\n        return (\r\n          <Form.Item\r\n            key={parameter.id}\r\n            name={parameter.name}\r\n            label={parameter.displayName || parameter.name}\r\n            required={parameter.required}\r\n            tooltip={parameter.helpText}\r\n            rules={[\r\n              {\r\n                required: parameter.required,\r\n                message: `${parameter.name} can't be empty.`,\r\n              },\r\n            ]}\r\n            {...itemProps}\r\n          >\r\n            {parameter.displayType === 0 ? (\r\n              <Input />\r\n            ) : parameter.displayType === 1 ? (\r\n              <InputNumber defaultValue={0} />\r\n            ) : parameter.displayType === 2 ? (\r\n              <Switch />\r\n            ) : parameter.displayType === 3 ? (\r\n              <DatePicker showTime format=\"DD-MM-YYYY HH:mm:ss\" />\r\n            ) : parameter.displayType === 4 ? (\r\n              <Select>\r\n                {parameter.validValues?.map((validValue) => {\r\n                  return (\r\n                    <Select.Option key={validValue} value={validValue}>\r\n                      {validValue}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : parameter.displayType === 5 ? (\r\n              <CredentialsSelectBox />\r\n            ) : parameter.displayType === 6 ? (\r\n              <Select mode=\"tags\" tokenSeparators={[\",\", \";\"]} >\r\n                {parameter.validValues?.map((validValue) => {\r\n                  return (\r\n                    <Select.Option key={validValue} value={validValue}>\r\n                      {validValue}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : null}\r\n          </Form.Item>\r\n        );\r\n      })}\r\n      {\r\n        !script.environment &&\r\n        <Form.Item name=\"environment\" label=\"Environment\">\r\n          <EnvironmentSelectBox />\r\n        </Form.Item>\r\n      }\r\n      {\r\n        !script.credential &&\r\n        <Form.Item name=\"credential\" label=\"Run As\">\r\n          <CredentialsSelectBox />\r\n        </Form.Item>\r\n      }\r\n\r\n      {showGoTo && (\r\n        <Form.Item\r\n          name=\"gotoJob\"\r\n          tooltip=\"Automatically navigate to job page when done.\"\r\n          valuePropName=\"checked\"\r\n          label=\"Go To Job\"\r\n        >\r\n          <Checkbox />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, ButtonProps, Col, Row, Select, Typography } from \"antd\";\r\nimport { AccessControlTypes, JobContext, RoleGuardProps, Script } from \"types\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport ParametersForm from \"./scriptParameters\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\n\r\ntype RunScriptProps = {\r\n  script: Script;\r\n} & ButtonProps &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function RunScript({ script, ...props }: RunScriptProps) {\r\n\r\n  const parameterSets = script?.scriptParameters?.map(m => m.parameterSet).filter(x => x !== 'Default').filter((value, index, self) => {\r\n    return self.indexOf(value) === index;\r\n  });\r\n\r\n  const [parameterSet, setParameterSet] = React.useState(script?.defaultParameterSet || (parameterSets && parameterSets[0]));\r\n  const { form, onOk } = useModalContext();\r\n\r\n  const serializeParameter = (parameter) => {\r\n    const value = form.getFieldValue(parameter?.name) !== null ? form.getFieldValue(parameter?.name) : parameter?.defaultValue\r\n\r\n    if (parameter?.type === 'System.String[]')\r\n      return JSON.stringify(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleOk() {\r\n    onOk(`/script/path/${script?.fullPath}`, \"create\", {\r\n      jobParameters: script?.scriptParameters?.filter(m => m.parameterSet === parameterSet || m.parameterSet === 'Default').map(parameter => ({\r\n        name: parameter?.name,\r\n        type: parameter.type,\r\n        value: serializeParameter(parameter),\r\n        displayType: parameter.displayType\r\n      }))\r\n    } as JobContext);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\", \"Execute\"]} requiredAccessControls={AccessControlTypes.Execute} accessControls={script?.accessControls} allowedWithOneWayGitSync={true}>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlayCircleFilled />}\r\n          {...props}\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title={`Run ${script?.fullPath}`} onClickOk={handleOk} width={script?.scriptParameters?.length !== 0 ? 1000 : 500}>\r\n        <Row style={{ marginBottom: '10px' }}>\r\n          <Col span={6}>\r\n          </Col>\r\n          <Col span={18}>\r\n            {script?.longDescription}\r\n            {script?.links?.map(link => <p><a href={link} target=\"_blank\" rel=\"noreferrer\">{link}</a></p>)}\r\n          </Col>\r\n        </Row>\r\n\r\n        {parameterSets?.length > 1 && (\r\n          <Row style={{ marginBottom: '20px' }}>\r\n            <Col span={6} style={{ textAlign: 'right', paddingRight: '10px' }}>\r\n              <Typography>Parameter Set:</Typography>\r\n            </Col>\r\n            <Col span={18}>\r\n              <Select id=\"parameterSet\" onChange={(e) => setParameterSet(e.toString())} value={parameterSet} style={{ width: '100%' }} defaultValue={script?.defaultParameterSet}>\r\n                {parameterSets?.map(parameterSet => <Select.Option key={parameterSet} value={parameterSet}>{parameterSet}</Select.Option>)}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        <ParametersForm\r\n          parameters={script?.scriptParameters?.filter(parameter => parameterSets?.length === 0 || parameter.parameterSet === parameterSet || parameter.parameterSet === 'Default')}\r\n          form={form}\r\n          showGoTo={true}\r\n          script={script}\r\n        />\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}