{"version":3,"sources":["components/api/components/output-card.tsx"],"names":["PowerShellOutputCard","endpoint","usePageContext","resource","copyResponse","useClipboard","onSuccess","text","message","info","copy","workerRef","React","useRef","useState","isLoading","setIsLoading","value","setValue","createWorker","useCallback","current","Worker","stopWorker","terminate","startWorker","onmessage","$event","data","useEffect","id","spinning","title","bordered","style","minWidth","extra","requiredRoles","size","type","icon","onClick","queryClient","resetQueries","postMessage","msg","url","getQueryData","fullUrl","window","location","origin","getOutput","output","bodyStyle","padding","headStyle","borderBottom","height","language","loading","options","minimap","renderCharacters","maxColumn"],"mappings":"0WAiBe,SAASA,IAAwB,IAC5BC,EAAaC,cAAvBC,SACMC,EAAiBC,YAAa,CAC1CC,UAAW,SAACC,GAAD,OAAUC,IAAQC,KAAR,uBADfC,KAGFC,EAAYC,IAAMC,SALqB,EAOXD,IAAME,UAAS,GAPJ,mBAOtCC,EAPsC,KAO3BC,EAP2B,OAQnBJ,IAAME,SAAS,IARI,mBAQtCG,EARsC,KAQ/BC,EAR+B,KAUvCC,EAAeP,IAAMQ,aAAY,WACrCT,EAAUU,QAAU,IAAIC,OAAO,yBAC9B,IAEGC,EAAa,WACjBP,GAAa,GACbL,EAAUU,QAAQG,aASdC,EAAcb,IAAMQ,aAAY,WACpCD,IACAR,EAAUU,QAAQK,UAAY,SAACC,GAA0B,IAAD,EACtDX,GAAa,GACbE,EAAQ,UAACS,EAAOC,YAAR,aAAC,EAAaX,UAEvB,CAACE,IAuBJ,OAXAP,IAAMiB,WAAU,WACdJ,MACC,CAACxB,EAAS6B,GAAIL,IAEjBb,IAAMiB,WAAU,WACd,OAAO,WACLN,OAGD,QAACtB,QAAD,IAACA,OAAD,EAACA,EAAU6B,KAGZ,cAAC,IAAD,CAAQC,SAAUhB,EAAlB,SACE,cAAC,IAAD,CACEiB,MAAOjB,EAAY,eAAiB,SACpCkB,UAAU,EACVC,MAAO,CAAEC,SAAU,QACnBC,MACE,cAAC,IAAD,CAAWC,cAAe,CAAC,WAAY,iBAAvC,SACE,eAAC,IAAD,CAAOC,KAAK,QAAZ,UACE,cAAC,IAAD,CAASN,MAAOjB,EAAY,QAAU,MAAtC,SACE,cAAC,IAAD,CACEwB,KAAK,OACLC,KACEzB,EAAY,cAAC,IAAD,IAA0B,cAAC,IAAD,IAExC0B,QAAS,kBAAO1B,GAjD9BQ,IACAmB,IAAYC,aAAZ,2BAAsC1C,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAU6B,GAAhD,iBACAL,KAWgB,WAAO,IAAD,EACtBT,GAAa,GACbL,EAAUU,QAAQuB,YAAY,CAC5BC,IAAK,YACLC,KACE,UAAAJ,IAAYK,aAAZ,2BAAgD9C,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAU6B,YAA1D,eACIkB,UADJ,UACkBC,OAAOC,SAASC,QADlC,cAC2ClD,QAD3C,IAC2CA,OAD3C,EAC2CA,EAAU6C,OA8BNM,QAGzC,cAAC,IAAD,CAASpB,MAAM,OAAf,SACE,cAAC,IAAD,CACEO,KAAK,OACLC,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAMrC,EAAY,OAACH,QAAD,IAACA,OAAD,EAACA,EAAUoD,kBAMhDC,UAAW,CAAEC,QAAS,GACtBC,UAAW,CACTC,aAAc,SA5BlB,SA+BE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,OAAO,aACPC,SAAS,OACTC,QAAS7C,EACTE,MAAOA,EACP4C,QAAS,CACPC,QAAS,CACPC,kBAAkB,EAClBC,UAAW","file":"static/js/61.7acdc6a5.chunk.js","sourcesContent":["/* eslint-disable import/no-webpack-loader-syntax */\r\n// @ts-ignore\r\nimport React from \"react\";\r\nimport { usePageContext } from \"components/pages/Page\";\r\nimport { Button, message, Card, Tooltip, Space } from \"antd\";\r\nimport {\r\n  CopyOutlined,\r\n  PauseCircleOutlined,\r\n  PlayCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Loader from \"components/utils/Loader\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport RoleGuard from \"../../standalone/role-guard\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport { Endpoint } from \"types\";\r\nimport { BaseEditor, CodeEditor } from \"components/ui/Editor/Editor\";\r\n\r\nexport default function PowerShellOutputCard() {\r\n  const { resource: endpoint } = usePageContext();\r\n  const { copy: copyResponse } = useClipboard({\r\n    onSuccess: (text) => message.info(`Response copied.`),\r\n  });\r\n  const workerRef = React.useRef<Worker>();\r\n\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const createWorker = React.useCallback(() => {\r\n    workerRef.current = new Worker(\"./workers/output.js\");\r\n  }, []);\r\n\r\n  const stopWorker = () => {\r\n    setIsLoading(false);\r\n    workerRef.current.terminate();\r\n  };\r\n\r\n  const stop = () => {\r\n    stopWorker();\r\n    queryClient.resetQueries(`/endpoint/${endpoint?.id}/output`);\r\n    startWorker();\r\n  };\r\n\r\n  const startWorker = React.useCallback(() => {\r\n    createWorker();\r\n    workerRef.current.onmessage = ($event: MessageEvent) => {\r\n      setIsLoading(false);\r\n      setValue($event.data?.value)\r\n    };\r\n  }, [createWorker]);\r\n\r\n  const getOutput = () => {\r\n    setIsLoading(true);\r\n    workerRef.current.postMessage({\r\n      msg: \"getOutput\",\r\n      url:\r\n        queryClient.getQueryData<Endpoint>(`/endpoint/${endpoint?.id}`)\r\n          ?.fullUrl || `${window.location.origin}${endpoint?.url}`,\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    startWorker();\r\n  }, [endpoint.id, startWorker]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      stopWorker();\r\n      // queryClient.resetQueries(`/endpoint/${endpoint?.id}/output`);\r\n    };\r\n  }, [endpoint?.id]);\r\n\r\n  return (\r\n    <Loader spinning={isLoading}>\r\n      <Card\r\n        title={isLoading ? \"Executing...\" : \"Output\"}\r\n        bordered={false}\r\n        style={{ minWidth: \"100%\" }}\r\n        extra={\r\n          <RoleGuard requiredRoles={[\"Operator\", \"Administrator\"]}>\r\n            <Space size=\"small\">\r\n              <Tooltip title={isLoading ? \"Pause\" : \"Run\"}>\r\n                <Button\r\n                  type=\"text\"\r\n                  icon={\r\n                    isLoading ? <PauseCircleOutlined /> : <PlayCircleOutlined />\r\n                  }\r\n                  onClick={() => (isLoading ? stop() : getOutput())}\r\n                />\r\n              </Tooltip>\r\n              <Tooltip title=\"Copy\">\r\n                <Button\r\n                  type=\"text\"\r\n                  icon={<CopyOutlined />}\r\n                  onClick={() => copyResponse(endpoint?.output)}\r\n                />\r\n              </Tooltip>\r\n            </Space>\r\n          </RoleGuard>\r\n        }\r\n        bodyStyle={{ padding: 0 }}\r\n        headStyle={{\r\n          borderBottom: \"unset\",\r\n        }}\r\n      >\r\n        <CodeEditor>\r\n          <BaseEditor\r\n            height=\"calc(30vh)\"\r\n            language=\"json\"\r\n            loading={isLoading}\r\n            value={value}\r\n            options={{\r\n              minimap: {\r\n                renderCharacters: false,\r\n                maxColumn: 80,\r\n              },\r\n            }}\r\n          />\r\n        </CodeEditor>\r\n      </Card>\r\n    </Loader>\r\n  );\r\n}\r\n"],"sourceRoot":""}