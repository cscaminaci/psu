{"version":3,"sources":["components/ui/ResourceInfo.tsx","components/modules/module.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/Editor.tsx"],"names":["ResourceInfo","props","navigate","useNavigate","bordered","bodyStyle","padding","ghost","onBack","AuthenticationPage","id","useParams","module","useQuery","enabled","initialData","queryClient","getQueryData","data","resource","title","name","subTitle","version","span","psuDark","base","inherit","rules","token","foreground","colors","psuLight","loader","config","paths","vs","init","then","monaco","languages","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","model","options","a","axios","post","getValue","headers","text","range","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","position","context","findIndex","x","triggerCharacter","content","cursorPosition","getOffsetAt","suggestions","map","insertText","label","documentation","help","kind","CompletionItemKind","Property","incomplete","EditorContext","React","createContext","CodeEditor","children","refetch","useState","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","message","success","editorRef","useRef","onSave","useCallback","key","action","current","resourceInfo","self","startsWith","schemaName","preserveBOM","lineEnding","onError","error","variables","refetchQueries","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","parent","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","useEffect","defineTheme","setTheme","onCopy","zoomIn","zoomOut","value","useMemo","Provider","SaveButton","child","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","allowedWithOneWayGitSync","cloneElement","type","icon","SaveFilled","onClick","callAll","BaseEditor","useContext","theme","language","loading","tip","height","onMount","FullEditor","showSave","actions","hideToolbar","usePageContext","extra","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","settings","wordWrap","wrappingIndent","minimap","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"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","file":"static/js/29.e8db7b1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, PageHeaderProps, PageHeader } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResourceInfo(props: PageHeaderProps & { children?: React.ReactNode }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Card bordered={false} bodyStyle={{padding: 0}}>\r\n      <PageHeader {...props} ghost={true} onBack={() => navigate(-1)} />\r\n    </Card>\r\n  );\r\n}\r\n","import \"../../Tables.module.css\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport { Page, PageContentBase, PageHeader } from \"components/pages/Page\";\r\nimport { Module } from \"types\";\r\nimport { Col } from \"antd\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport { useQuery } from \"react-query3\";\r\nimport ResourceInfo from \"components/ui/ResourceInfo\";\r\n\r\nexport default function AuthenticationPage() {\r\n    const { id } = useParams();\r\n    const { data: module } = useQuery<Module>(\r\n        `/module/${id}`,\r\n        {\r\n            enabled: !!id,\r\n            initialData: (): Module => queryClient.getQueryData<Module>(`/module/${id}`)\r\n        }\r\n    );\r\n\r\n\r\n    return (\r\n        <Page resource={module}>\r\n            <PageHeader>\r\n                <ResourceInfo\r\n                    title={module?.name}\r\n                    subTitle={module?.version}\r\n                ></ResourceInfo>\r\n            </PageHeader>\r\n            <PageContentBase>\r\n                <Col span={24}>\r\n                    <CodeEditor>\r\n                        <FullEditor title=\"Code Editor\" />\r\n                    </CodeEditor>\r\n                </Col>\r\n            </PageContentBase>\r\n        </Page>\r\n    );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\n\r\nloader.config({ paths: { vs: \"/admin/vs\" } });\r\nloader.init().then(monaco => {\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(`/api/v1/editor/format`, model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(`/api/v1/editor/complete`, {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: monaco.languages.CompletionItemKind.Property,\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { } }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(false);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      model.onDidChangeContent(() => {\r\n        var versionId = model.getVersionId();\r\n        debounce(async () => {\r\n          var newVersionId = model.getVersionId();\r\n          if (versionId !== newVersionId) return;\r\n\r\n          let { data } = await axios.post(`/api/v1/editor/parse`, model.getValue(), {\r\n            headers: {\r\n              'content-type': 'text/plain'\r\n            }\r\n          });\r\n\r\n          const markerData = data.map(x => {\r\n            return {\r\n              startColumn: x.token.startColumn,\r\n              endColumn: x.token.endColumn,\r\n              startLineNumber: x.token.startLine,\r\n              endLineNumber: x.token.endLine,\r\n              severity: MarkerSeverity.Error,\r\n              message: x.message\r\n            }\r\n          });\r\n\r\n          monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n        }, 300)();\r\n\r\n      });\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const { resource } = usePageContext();\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}