{"version":3,"sources":["components/home/home.tsx"],"names":["Home","useQuery","stats","data","isLoading","settings","useAppStore","title","subTitle","gutter","hideApi","span","style","marginBottom","to","prefix","value","endpoints","hideAutomation","jobsRunToday","valueStyle","color","jobsFailedToday","runningJobs","jobsWaitingOnFeedback","scheduledJobs","hideDashboard","runningDashboards","dashboardSessions","pages","licensed","licensedName","licenseStatus","Date","licenseExpiration","toDateString","defaultEnvironment","apiEnvironment","securityEnvironment"],"mappings":"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","file":"static/js/76.179a81f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Row, Col, Statistic, Card, Spin, Typography, PageHeader, Tooltip } from \"antd\";\r\nimport { Stats } from \"types\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { ApiOutlined, CheckOutlined, ClockCircleOutlined, CloseOutlined, GroupOutlined, LineChartOutlined, PlayCircleOutlined, QuestionCircleOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    const { data: stats, isLoading } = useQuery<Stats>(\"/stats\");\r\n    const { settings } = useAppStore();\r\n\r\n    if (isLoading)\r\n        return <Spin />;\r\n\r\n    return (\r\n        <PageHeader title=\"Home\" subTitle=\"Information about your PowerShell Universal environment.\">\r\n            <Row gutter={16}>\r\n                {settings?.hideApi ? null : (\r\n                    <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                        <Link to=\"/admin/apis/endpoints\">\r\n                            <Card>\r\n                                <Statistic title=\"Endpoints\" prefix={<ApiOutlined />} value={stats.endpoints}></Statistic>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                )}\r\n                {settings?.hideAutomation ? null : (\r\n                    <>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs\">\r\n                                <Card>\r\n                                    <Statistic title=\"Jobs Run Today\" prefix={<CheckOutlined />} value={stats.jobsRunToday} valueStyle={{ color: 'green' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs/failed\">\r\n                                <Card>\r\n                                    <Statistic title=\"Jobs Failed Today\" prefix={<CloseOutlined />} value={stats.jobsFailedToday} valueStyle={{ color: 'red' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs/running\">\r\n                                <Card>\r\n                                    <Statistic title=\"Currently Running Jobs\" prefix={<PlayCircleOutlined />} value={stats.runningJobs} valueStyle={{ color: 'blue' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs/waiting\">\r\n                                <Card>\r\n                                    <Statistic title=\"Jobs Waiting on Feedback\" prefix={<QuestionCircleOutlined />} value={stats.jobsWaitingOnFeedback} valueStyle={{ color: 'gold' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/schedules\">\r\n                                <Card>\r\n                                    <Statistic title=\"Scheduled Jobs\" prefix={<ClockCircleOutlined />} value={stats.scheduledJobs}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    </>\r\n                )}\r\n                {settings?.hideDashboard ? null : (\r\n                    <>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/dashboards\">\r\n                                <Card>\r\n                                    <Statistic title=\"Running Dashboards\" prefix={<LineChartOutlined />} value={stats.runningDashboards}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/dashboards\">\r\n                                <Card>\r\n                                    <Statistic title=\"Dashboard Sessions\" prefix={<UserOutlined />} value={stats.dashboardSessions}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/pages\">\r\n                                <Card>\r\n                                    <Statistic title=\"Pages\" prefix={<GroupOutlined />} value={stats.pages}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    </>\r\n                )}\r\n                <Col span={6}>\r\n                    <Link to=\"/admin/settings/license\">\r\n                        <Card title=\"License\">\r\n                            {stats.licensed ? (\r\n                                <>\r\n                                    <Typography>Licensed to: {stats.licensedName}</Typography>\r\n                                    <Typography><Tooltip title=\"You will no longer receive updates or support but can still use the product\">License Expires: {stats.licenseStatus || new Date(stats.licenseExpiration).toDateString()}</Tooltip></Typography>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Typography><CloseOutlined /> Not Licensed</Typography>\r\n                                </>\r\n\r\n                            )}\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Link to=\"/admin/settings/environments\">\r\n                        <Card title=\"Environments\">\r\n                            <Typography>Default Environment: {stats.defaultEnvironment}</Typography>\r\n                            <Typography>API Environment: {stats.apiEnvironment}</Typography>\r\n                            <Typography>Security Environment: {stats.securityEnvironment}</Typography>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </PageHeader>\r\n    )\r\n}\r\n"],"sourceRoot":""}