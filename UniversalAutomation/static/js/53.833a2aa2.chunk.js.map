{"version":3,"sources":["components/ui/EditorButton.tsx","components/settings/Authentications.tsx"],"names":["EditorButton","to","accessControls","allowedWithOneWayGitSync","props","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","title","type","icon","DeleteButton","React","lazy","Option","Select","Saml2Options","useState","open","setOpen","saving","setIsSaving","Form","useForm","form","mutateAsync","useMutation","normalizedRecord","useNormalizeData","onOk","useCallback","a","validateFields","values","key","resource","id","action","onError","error","notification","message","description","response","data","style","color","onSuccess","variables","queryClient","refetchQueries","onClick","visible","onCancel","footer","href","target","float","loading","size","layout","initialValues","Item","name","label","tooltip","marginBottom","rules","required","WsFedOptions","valuePropName","value","OpenIdConnectOptions","Authentications","addingAuth","setIsAddingAuth","useQuery","refetchOnWindowFocus","authentications","isLoading","refetch","toggleEnabled","record","filter","m","disabled","length","addAuthenticationMethod","availableMethods","AuthenticationMethodType","OpenIDConnect","Saml2","Windows","WSFederation","x","map","indexOf","convertToName","authenticationType","columns","dataIndex","editable","sorter","b","localeCompare","sortDirections","render","text","source","okText","cancelText","onConfirm","checked","width","subTitle","extra","placeholder","onChange","queryFn"],"mappings":"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","file":"static/js/53.833a2aa2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport RoleGuard from \"../standalone/role-guard\";\r\nimport { Button, ButtonProps, Tooltip } from \"antd\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\nimport { CodeFilled } from \"@ant-design/icons\";\r\nimport { AccessControlTypes, RoleGuardProps } from \"types\";\r\n\r\ntype EditorButtonProps = {\r\n  to: LinkProps[\"to\"];\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditorButton({\r\n  to,\r\n  accessControls,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditorButtonProps) {\r\n  return (\r\n    <RoleGuard\r\n      requiredRoles={[\"Administrator\", \"Operator\"]}\r\n      requiredAccessControls={AccessControlTypes.Edit}\r\n      accessControls={accessControls}\r\n      allowedWithOneWayGitSync={allowedWithOneWayGitSync}\r\n    >\r\n      <Tooltip title=\"Edit Details\">\r\n        <Link to={to}>\r\n          <Button type=\"text\" icon={<CodeFilled />} {...props} />\r\n        </Link>\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query3\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport { Button, PageHeader, Space, Tooltip, Select, Modal as AntModal, Form, Input, Switch, notification, Popconfirm, message } from \"antd\";\r\nimport { CustomColumns, Authentication, AuthenticationMethodType } from \"../../types\";\r\nimport Table from \"../ui/Table\";\r\nimport { ExclamationCircleOutlined, LinkOutlined, EditFilled } from \"@ant-design/icons\";\r\nimport EditorButton from \"components/ui/EditorButton\";\r\nimport useNormalizeData from \"../utils/normalizedRecord\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst Saml2Options = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setIsSaving] = React.useState(false);\r\n  const [form] = Form.useForm();\r\n  const { mutateAsync } = useMutation<any>();\r\n  const normalizedRecord = useNormalizeData();\r\n\r\n  const onOk = React.useCallback(\r\n    async () => {\r\n      let values = await form.validateFields();\r\n\r\n      setIsSaving(true);\r\n\r\n      await mutateAsync(\r\n        { key: `/settings/authentication/${props.resource.id}`, action: \"update\", ...normalizedRecord({ ...props.resource, ...values }) },\r\n        {\r\n          onError: (error) => {\r\n            setOpen(false);\r\n            setIsSaving(false);\r\n            notification.error({\r\n              message: \"Error\",\r\n              description: error.response?.data,\r\n              icon: <ExclamationCircleOutlined style={{ color: 'red' }} />,\r\n            })\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setOpen(false);\r\n            queryClient.refetchQueries(\"/settings/authentication\");\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [form, mutateAsync, normalizedRecord, props.resource]\r\n  );\r\n\r\n\r\n  const handleOk = () => {\r\n    onOk();\r\n  }\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} allowedWithOneWayGitSync={false}>\r\n        <Tooltip title=\"Edit\">\r\n          <Button onClick={() => setOpen(true)} icon={<EditFilled />} type=\"text\"></Button>\r\n        </Tooltip>\r\n      </RoleGuard>\r\n\r\n      <AntModal\r\n        title=\"SAML2 Options\"\r\n        visible={open}\r\n        onCancel={() => setOpen(false)}\r\n        footer={[\r\n          <Button\r\n            key=\"link\"\r\n            href=\"https://docs.powershelluniversal.com/config/security/saml2\"\r\n            target=\"_blank\"\r\n            type=\"primary\"\r\n            style={{ float: 'left' }}\r\n          >\r\n            Learn More\r\n          </Button>,\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleOk} loading={saving}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          size=\"small\"\r\n          form={form}\r\n          layout=\"vertical\"\r\n          initialValues={{ ...props.resource }}\r\n        >\r\n          <Form.Item\r\n            name=\"entityID\"\r\n            label=\"Entity ID\"\r\n            tooltip=\"The service provider entity ID.\"\r\n            style={{ marginBottom: 0 }}\r\n            rules={[{ required: true, message: 'The entity ID is required' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"IdentityProviderEntityId\"\r\n            label=\"Identity Provider Entity ID\"\r\n            tooltip=\"The identity provider entity ID. This will be used as the metadata address if none is specified.\"\r\n            rules={[{ required: true, message: 'The identity provider entity ID is required' }]}\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"metadataAddress\"\r\n            label=\"Metadata Address\"\r\n            tooltip=\"The metadata address if it is different than the identity provider ID.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"callbackPath\"\r\n            label=\"Return URL\"\r\n            tooltip=\"The return URL after authentication has been completed.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"serviceCertificate\"\r\n            label=\"Service Certificate\"\r\n            tooltip=\"The certificate responsible for signing requests. This can be a path to a file or the distinguished named of a certificate.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </AntModal>\r\n    </>\r\n  )\r\n}\r\n\r\nconst WsFedOptions = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setIsSaving] = React.useState(false);\r\n  const [form] = Form.useForm();\r\n  const { mutateAsync } = useMutation<any>();\r\n  const normalizedRecord = useNormalizeData();\r\n\r\n  const onOk = React.useCallback(\r\n    async () => {\r\n      let values = await form.validateFields();\r\n\r\n      setIsSaving(true);\r\n\r\n      await mutateAsync(\r\n        { key: `/settings/authentication/${props.resource.id}`, action: \"update\", ...normalizedRecord({ ...props.resource, ...values }) },\r\n        {\r\n          onError: (error) => {\r\n            setOpen(false);\r\n            setIsSaving(false);\r\n            notification.error({\r\n              message: \"Error\",\r\n              description: error.response?.data,\r\n              icon: <ExclamationCircleOutlined style={{ color: 'red' }} />,\r\n            })\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setOpen(false);\r\n            queryClient.refetchQueries(\"/settings/authentication\");\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [form, mutateAsync, normalizedRecord, props.resource]\r\n  );\r\n\r\n\r\n  const handleOk = () => {\r\n    onOk();\r\n  }\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} allowedWithOneWayGitSync={false}>\r\n        <Tooltip title=\"Edit\">\r\n          <Button onClick={() => setOpen(true)} icon={<EditFilled />} type=\"text\"></Button>\r\n        </Tooltip>\r\n      </RoleGuard>\r\n\r\n      <AntModal\r\n        title=\"WS-Federation Options\"\r\n        visible={open}\r\n        onCancel={() => setOpen(false)}\r\n        footer={[\r\n          <Button\r\n            key=\"link\"\r\n            href=\"https://docs.powershelluniversal.com/config/security/ws-federation\"\r\n            target=\"_blank\"\r\n            type=\"primary\"\r\n            style={{ float: 'left' }}\r\n          >\r\n            Learn More\r\n          </Button>,\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleOk} loading={saving}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          size=\"small\"\r\n          form={form}\r\n          layout=\"vertical\"\r\n          initialValues={{ ...props.resource }}\r\n        >\r\n          <Form.Item\r\n            name=\"callbackPath\"\r\n            label=\"Callback Path\"\r\n            tooltip=\"The callback path that the WS-Federation provider will use.\"\r\n            style={{ marginBottom: 0 }}\r\n            rules={[{ required: true, message: 'The callback path is required!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"metadataAddress\"\r\n            label=\"Metadata Address\"\r\n            tooltip=\"The meta data address.\"\r\n            rules={[{ required: true, message: 'The metadata address is required!' }]}\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"wtrealm\"\r\n            label=\"WTrealm\"\r\n            tooltip=\"The WTRealm.\"\r\n            rules={[{ required: true, message: 'The Wtrealm is required!' }]}\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"wreply\"\r\n            label=\"Wreply\"\r\n            tooltip=\"The Wreply.\"\r\n            rules={[{ required: true, message: 'The Wreply is required!' }]}\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"useTokenLifetime\"\r\n            label=\"Use Token Lifetime\"\r\n            tooltip=\"Indicates that the authentication session lifetime (e.g. cookies) should match that of the authentication token.\"\r\n            style={{ marginBottom: 0 }}\r\n            valuePropName=\"checked\"\r\n          >\r\n            <Switch />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"correlationCookieSameSite\"\r\n            label=\"Correlation Cookie SameSite\"\r\n            tooltip=\"List of permissions to request.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Select>\r\n              <Select.Option value=\"none\">None</Select.Option>\r\n              <Select.Option value=\"lax\">Lax</Select.Option>\r\n              <Select.Option value=\"strict\">Strict</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </AntModal>\r\n    </>\r\n  )\r\n}\r\n\r\nconst OpenIdConnectOptions = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setIsSaving] = React.useState(false);\r\n  const [form] = Form.useForm();\r\n  const { mutateAsync } = useMutation<any>();\r\n  const normalizedRecord = useNormalizeData();\r\n\r\n  const onOk = React.useCallback(\r\n    async () => {\r\n      let values = await form.validateFields();\r\n\r\n      setIsSaving(true);\r\n\r\n      await mutateAsync(\r\n        { key: `/settings/authentication/${props.resource.id}`, action: \"update\", ...normalizedRecord({ ...props.resource, ...values }) },\r\n        {\r\n          onError: (error) => {\r\n            setOpen(false);\r\n            setIsSaving(false);\r\n            notification.error({\r\n              message: \"Error\",\r\n              description: error.response?.data,\r\n              icon: <ExclamationCircleOutlined style={{ color: 'red' }} />,\r\n            })\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setOpen(false);\r\n            queryClient.refetchQueries(\"/settings/authentication\");\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [form, mutateAsync, normalizedRecord, props.resource]\r\n  );\r\n\r\n\r\n  const handleOk = () => {\r\n    onOk();\r\n  }\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} allowedWithOneWayGitSync={false}>\r\n        <Tooltip title=\"Edit\">\r\n          <Button onClick={() => setOpen(true)} icon={<EditFilled />} type=\"text\"></Button>\r\n        </Tooltip>\r\n      </RoleGuard>\r\n\r\n      <AntModal\r\n        title=\"OpenID Connect Options\"\r\n        visible={open}\r\n        onCancel={() => setOpen(false)}\r\n        footer={[\r\n          <Button\r\n            key=\"link\"\r\n            href=\"https://docs.powershelluniversal.com/config/security/openid-connect\"\r\n            target=\"_blank\"\r\n            type=\"primary\"\r\n            style={{ float: 'left' }}\r\n          >\r\n            Learn More\r\n          </Button>,\r\n          <Button key=\"back\" onClick={handleCancel} >\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleOk} loading={saving}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          size=\"small\"\r\n          form={form}\r\n          layout=\"vertical\"\r\n          initialValues={{ ...props.resource }}\r\n        >\r\n          <Form.Item\r\n            name=\"callbackPath\"\r\n            label=\"Callback Path\"\r\n            tooltip=\"The callback path that the OpenID Connect provider will use.\"\r\n            style={{ marginBottom: 0 }}\r\n            rules={[{ required: true, message: 'The callback path is required!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"clientId\"\r\n            label=\"Client ID\"\r\n            tooltip=\"The client ID used to register this application.\"\r\n            rules={[{ required: true, message: 'The client ID is required!' }]}\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"clientSecret\"\r\n            label=\"Client Secret\"\r\n            tooltip=\"The client secret used to identify this application.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"authority\"\r\n            label=\"Authority\"\r\n            tooltip=\"The URL to the authority authenticating the request.\"\r\n            style={{ marginBottom: 0 }}\r\n            rules={[{ required: true, message: 'The authority is required!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"resource\"\r\n            label=\"Resource\"\r\n            tooltip=\"An additional resource to request access to via an access token.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"responseType\"\r\n            label=\"Response Type\"\r\n            tooltip=\"The OpenID Connect response type. Specify code, token, and\\or token_id separated by spaces\"\r\n            rules={[{ required: true, message: 'Response type is required!' }]}\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"saveTokens\"\r\n            label=\"Save Tokens\"\r\n            tooltip=\"Defines whether access and refresh tokens should be stored.\"\r\n            style={{ marginBottom: 0 }}\r\n            valuePropName=\"checked\"\r\n          >\r\n            <Switch />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"useTokenLifetime\"\r\n            label=\"Use Token Lifetime\"\r\n            tooltip=\"Indicates that the authentication session lifetime (e.g. cookies) should match that of the authentication token.\"\r\n            style={{ marginBottom: 0 }}\r\n            valuePropName=\"checked\"\r\n          >\r\n            <Switch />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"getClaimsFromUserInfoEndpoint\"\r\n            label=\"Get Claims From User Info Endpoint\"\r\n            tooltip=\"Whether to retrieve additional claims or not after creating an identity from id_token received from token endpoint. \"\r\n            style={{ marginBottom: 0 }}\r\n            valuePropName=\"checked\"\r\n          >\r\n            <Switch />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"scopes\"\r\n            label=\"Scopes\"\r\n            tooltip=\"List of permissions to request. Separate scopes by spaces\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"correlationCookieSameSite\"\r\n            label=\"Correlation Cookie SameSite\"\r\n            tooltip=\"List of permissions to request.\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <Select>\r\n              <Select.Option value=\"none\">None</Select.Option>\r\n              <Select.Option value=\"lax\">Lax</Select.Option>\r\n              <Select.Option value=\"strict\">Strict</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </AntModal>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default function Authentications() {\r\n  const { mutateAsync } = useMutation<any>();\r\n  const [addingAuth, setIsAddingAuth] = React.useState(false);\r\n\r\n\r\n  const { data: authentications, isLoading, refetch } = useQuery<Authentication[]>(\"/settings/authentication\", {\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  const toggleEnabled = React.useCallback(\r\n    async (record: Authentication) => {\r\n\r\n      if (authentications.filter(m => !m.disabled).length === 1 && !record.disabled) {\r\n        message.error(\"You must have at least one enabled authentication method.\");\r\n        return;\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key: `/settings/authentication/${record.id}`, action: \"update\", ...record, disabled: !record.disabled },\r\n        {\r\n          onSuccess: (data, variables) => {\r\n            refetch();\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch, authentications]\r\n  );\r\n\r\n  const addAuthenticationMethod = React.useCallback(\r\n    async (type: AuthenticationMethodType) => {\r\n      setIsAddingAuth(true);\r\n\r\n      await mutateAsync(\r\n        { key: `/settings/authentication`, action: \"create\", type, disabled: true },\r\n        {\r\n          onError: (error) => {\r\n            setIsAddingAuth(false);\r\n            notification.error({\r\n              message: \"Error\",\r\n              description: error.response.data,\r\n              icon: <ExclamationCircleOutlined style={{ color: 'red' }} />,\r\n            })\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsAddingAuth(false);\r\n            refetch();\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const availableMethods = [\r\n    AuthenticationMethodType.Form,\r\n    AuthenticationMethodType.OpenIDConnect,\r\n    AuthenticationMethodType.Saml2,\r\n    AuthenticationMethodType.Windows,\r\n    AuthenticationMethodType.WSFederation\r\n  ].filter(x => authentications?.map(m => m.type).indexOf(x) === -1);\r\n\r\n  const convertToName = (authenticationType: AuthenticationMethodType) => {\r\n    switch (authenticationType) {\r\n      case AuthenticationMethodType.Form:\r\n        return \"Form\";\r\n      case AuthenticationMethodType.Windows:\r\n        return \"Windows\";\r\n      case AuthenticationMethodType.OpenIDConnect:\r\n        return \"OpenID Connect\";\r\n      case AuthenticationMethodType.WSFederation:\r\n        return \"WS-Federation\";\r\n      case AuthenticationMethodType.Saml2:\r\n        return \"SAML2\";\r\n    }\r\n  }\r\n\r\n  const columns: CustomColumns<Authentication>[] = [\r\n    {\r\n      key: \"type\",\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      editable: false,\r\n      sorter: (a, b) => convertToName(a.type).localeCompare(convertToName(b.type)),\r\n      sortDirections: ['descend'],\r\n      render: (text, record) => <Space>\r\n        {convertToName(record.type)}\r\n      </Space>\r\n    },\r\n    {\r\n      key: \"source\",\r\n      title: \"Source\",\r\n      dataIndex: \"source\",\r\n      editable: false\r\n    },\r\n    {\r\n      key: \"enabled\",\r\n      title: \"Enabled\",\r\n      dataIndex: \"enabled\",\r\n      editable: false,\r\n      render: (text, record) => {\r\n        return (<Popconfirm disabled={record.source === \"appsettings.json\"} okText=\"Yes\" cancelText=\"No\" onConfirm={() => toggleEnabled(record)} title={`Are you sure you want to ${record.disabled ? \"enabled\" : \"disable\"} this authentication method? You may lose access to the admin console if not configured properly.`}>\r\n          <Switch disabled={record.source === \"appsettings.json\"} checked={!record.disabled} />\r\n        </Popconfirm>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      editable: false,\r\n      render: (text, record) => {\r\n        if (record.source === 'appsettings.json') return <></>;\r\n\r\n        if (record.type === AuthenticationMethodType.Form) {\r\n          return (\r\n            <Space>\r\n              <EditorButton to={`${record?.id}`} allowedWithOneWayGitSync={false} />\r\n            </Space>\r\n          );\r\n        }\r\n\r\n        if (record.type === AuthenticationMethodType.OpenIDConnect) {\r\n          return (\r\n            <Space>\r\n              <OpenIdConnectOptions resource={record} allowedWithOneWayGitSync={false} />\r\n              <DeleteButton resource={record} refetch={[\"/settings/authentication\"]} allowedWithOneWayGitSync={false} />\r\n            </Space>\r\n          )\r\n        }\r\n\r\n        if (record.type === AuthenticationMethodType.WSFederation) {\r\n          return (\r\n            <Space>\r\n              <WsFedOptions resource={record} allowedWithOneWayGitSync={false} />\r\n              <DeleteButton resource={record} refetch={[\"/settings/authentication\"]} allowedWithOneWayGitSync={false} />\r\n            </Space>\r\n          )\r\n        }\r\n\r\n\r\n        if (record.type === AuthenticationMethodType.Saml2) {\r\n          return (\r\n            <Space>\r\n              <Saml2Options resource={record} allowedWithOneWayGitSync={false} />\r\n              <DeleteButton resource={record} refetch={[\"/settings/authentication\"]} allowedWithOneWayGitSync={false} />\r\n            </Space>\r\n          )\r\n        }\r\n\r\n        return (\r\n          <Space>\r\n            <DeleteButton resource={record} refetch={[\"/settings/authentication\"]} allowedWithOneWayGitSync={false} />\r\n          </Space>)\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageHeader title=\"Authentication\" subTitle=\"Authentication methods for the platform.\" extra={[\r\n      availableMethods.length > 0 && (\r\n        <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} allowedWithOneWayGitSync={false}>\r\n          <Select style={{ width: 250 }} placeholder=\"Add Authentication Method\" onChange={addAuthenticationMethod} loading={addingAuth} disabled={addingAuth}>\r\n            {availableMethods.map(x => <Option key={x} value={x}>{convertToName(x)}</Option>)}\r\n          </Select>\r\n        </RoleGuard>),\r\n      <Button icon={<LinkOutlined />} href=\"https://docs.powershelluniversal.com/config/security#forms-authentication\" target=\"_blank\">Documentation</Button>\r\n    ]}>\r\n      <Table\r\n        title=\"Authentication\"\r\n        data={authentications}\r\n        columns={columns}\r\n        loading={isLoading}\r\n        queryFn={refetch}\r\n      />\r\n    </PageHeader>\r\n  );\r\n}"],"sourceRoot":""}