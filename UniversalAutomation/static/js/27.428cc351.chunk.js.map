{"version":3,"sources":["components/interfaces/Pages.tsx","components/ui/BuyLicenseAlertBox.tsx","components/ui/EditModal.tsx"],"names":["PageModal","React","lazy","Pages","useQuery","enabled","refetchOnWindowFocus","pages","data","isLoading","refetch","columns","key","title","dataIndex","editable","render","text","record","name","align","authenticated","value","roles","length","map","role","color","width","url","startsWith","substring","style","justifyContent","allowedWithOneWayGitSync","resource","type","icon","href","target","subTitle","extra","actions","loading","queryFn","BuyLicenseAlertBox","message","Link","EditModal","schemaName","props","getButtonProps","useActionButton","normalizedRecord","useNormalizeData","useModalContext","onOk","form","licensed","useAppStore","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","action","onClickOk","resourceInfo","self","parent","inEditMode","preserve","defaultValues","Feature","Dashboard"],"mappings":"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","file":"static/js/27.428cc351.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CustomColumns, Page } from \"../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport { Button, PageHeader, Space, Tag, Tooltip } from \"antd\";\r\nimport Table from \"../ui/Table\";\r\nimport EditModal from \"components/ui/EditModal\";\r\nimport DeleteButton from \"components/ui/DeleteButton\";\r\nimport { EyeOutlined, LinkOutlined } from \"@ant-design/icons\";\r\nconst PageModal = React.lazy(() => import(\"./PageModal\"));\r\n\r\nexport default function Pages() {\r\n  const { data: pages, isLoading, refetch } = useQuery<Page[]>(\r\n    \"/page\",\r\n    { enabled: false, refetchOnWindowFocus: false }\r\n  );\r\n\r\n  const columns: CustomColumns<Page>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      editable: true,\r\n    },\r\n    {\r\n      key: \"url\",\r\n      title: \"URL\",\r\n      dataIndex: \"url\",\r\n      editable: true,\r\n      render: (text, record) => {\r\n        return text && text !== '' ? text : record.name\r\n      }\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      key: \"description\",\r\n      dataIndex: \"description\",\r\n      editable: true,\r\n    },\r\n    {\r\n      key: \"authenticated\",\r\n      title: \"Authentication\",\r\n      dataIndex: \"authenticated\",\r\n      align: \"center\",\r\n      render: (text, record) =>\r\n        record?.authenticated ? \"Enabled\" : \"Disabled\",\r\n    },\r\n    {\r\n      key: \"role\",\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      render: (value, record) => {\r\n        return record.roles?.length > 0\r\n          ? record?.roles?.map((role) => (\r\n            <Tag key={role} color=\"blue\">\r\n              {role}\r\n            </Tag>\r\n          ))\r\n          : null;\r\n      },\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      editable: false,\r\n      render: (text, record) => {\r\n        let url = record?.url && record?.url !== '' ? record?.url : record.name;\r\n        if (url.startsWith(\"/\")) {\r\n          url = url.substring(1, url.length);\r\n        }\r\n\r\n        return (\r\n          <Space style={{ justifyContent: \"flex-end\", width: \"100%\" }}>\r\n            <Modal>\r\n              <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n            </Modal>\r\n            <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n            <Tooltip title=\"View\">\r\n              <Button type=\"text\" icon={<EyeOutlined />} href={`/${url}`} target=\"_blank\" />\r\n            </Tooltip>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageHeader title=\"Pages\" subTitle=\"Simple, drag and drop web pages that can execute PowerShell and REST APIs.\" extra={[\r\n      <Button icon={<LinkOutlined />} href=\"https://docs.powershelluniversal.com/userinterfaces/pages\" target=\"_blank\">Documentation</Button>\r\n    ]}>\r\n      <Table\r\n        title=\"Pages\"\r\n        actions={[\r\n          <Modal>\r\n            <PageModal />\r\n          </Modal>,\r\n        ]}\r\n        columns={columns}\r\n        data={pages}\r\n        loading={isLoading}\r\n        queryFn={refetch}\r\n      />\r\n    </PageHeader>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert, Space, Typography } from \"antd\";\r\n\r\nexport default function BuyLicenseAlertBox() {\r\n  return (\r\n    <Alert\r\n      type=\"info\"\r\n      message={\r\n        <Space\r\n          align=\"center\"\r\n          style={{ width: \"100%\", justifyContent: \"space-between\" }}\r\n        >\r\n          Authentication requires a license.\r\n          <Typography.Link\r\n            href=\"https://ironmansoftware.com/powershell-universal/?rel=product\"\r\n            target=\"_blank\"\r\n          >\r\n            Buy License.\r\n          </Typography.Link>\r\n        </Space>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AccessControlTypes, Feature, PSUTypes, RoleGuardProps } from \"types\";\r\nimport { Button, ButtonProps } from \"antd\";\r\nimport { Form, FormContentBase } from \"./Form/Form\";\r\nimport { useActionButton } from \"components/utils/hooks/useActionButton\";\r\nimport { useModalContext, ModalOpenButton, ModalContent } from \"./Modal\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport BuyLicenseAlertBox from \"./BuyLicenseAlertBox\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\n\r\ntype EditModalProps = {\r\n  action?: string;\r\n  record: PSUTypes;\r\n  schemaName?: string | undefined;\r\n  accessControl?: AccessControlTypes;\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditModal({\r\n  record,\r\n  schemaName,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditModalProps) {\r\n  const { getButtonProps } = useActionButton();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { onOk, form } = useModalContext();\r\n  const { licensed } = useAppStore()\r\n\r\n  function handleOk() {\r\n\r\n    let key = record?.resourceInfo?.schemaName === \"tag\" ||\r\n      record?.resourceInfo?.schemaName === \"role\" ||\r\n      record?.resourceInfo?.schemaName === \"endpoint\" ||\r\n      record?.resourceInfo?.schemaName === \"ratelimit\" ||\r\n      record?.resourceInfo?.schemaName === \"dashboard\" ||\r\n      record?.resourceInfo?.schemaName === \"schedule\" ||\r\n      record?.resourceInfo?.schemaName === \"publishedfolder\"\r\n      ? record?.resourceInfo?.self\r\n      : record?.resourceInfo?.parent\r\n\r\n    if (record?.resourceInfo?.schemaName === \"page\") {\r\n      key = record?.resourceInfo?.self + \"?ignoreContent=true\"\r\n    }\r\n\r\n    onOk(key,\r\n      \"update\",\r\n      record\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={props.accessControls} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n        <Button\r\n          {...props}\r\n          {...getButtonProps({ action: \"edit\" })}\r\n          action=\"edit\"\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Edit Resource\" onClickOk={handleOk}>\r\n        <Form schemaName={schemaName || record?.resourceInfo?.schemaName}>\r\n          <FormContentBase\r\n            name=\"edit_form\"\r\n            form={form}\r\n            inEditMode={true}\r\n            preserve={false}\r\n            defaultValues={normalizedRecord(record)}\r\n          />\r\n        </Form>\r\n        {!licensed(Feature.Dashboard) && <BuyLicenseAlertBox />}\r\n      </ModalContent>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}