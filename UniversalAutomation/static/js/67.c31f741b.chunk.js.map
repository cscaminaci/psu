{"version":3,"sources":["components/dashboard/components/DashboardOutput.tsx"],"names":["config","readOnly","wordWrap","wrappingIndent","minimap","enabled","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder","DashboardOutput","showTimestamp","id","useParams","useQuery","refetchOnWindowFocus","refetchOnMount","data","isLoading","refetch","loading","options","value","parseDashboardLog","parseDashboardLogNoTimestamp"],"mappings":"yQAQMA,EAAiC,CACrCC,UAAU,EACVC,SAAU,KACVC,eAAgB,OAChBC,QAAS,CACPC,SAAS,GAEXC,WAAY,GACZC,oBAAqB,EACrBC,sBAAsB,EACtBC,2BAA2B,EAC3BC,mBAAoB,EACpBC,qBAAqB,GAGR,SAASC,EAAT,GAAqE,IAA3CC,EAA0C,EAA1CA,cAC/BC,EAAOC,cAAPD,GADyE,EAE5CE,YAAQ,qBAC7BF,EAD6B,QAE3C,CAAET,UAAWS,EAAIG,sBAAsB,EAAOC,gBAAgB,IAFxDC,EAFyE,EAEzEA,KAAMC,EAFmE,EAEnEA,UAAWC,EAFwD,EAExDA,QAKzB,OACE,cAAC,IAAD,CAAYA,QAASA,EAArB,SACE,cAAC,IAAD,CACEC,QAASF,EACTG,QAAO,eAAMvB,GACbwB,MAAQX,EAAgBY,YAAkBN,GAAQO,YAA6BP","file":"static/js/67.c31f741b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BaseEditor, CodeEditor } from \"components/ui/Editor/Editor\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { parseDashboardLog, parseDashboardLogNoTimestamp } from \"components/utils/utils\";\r\nimport { DashboardLog } from \"types\";\r\nimport {EditorProps} from \"@monaco-editor/react\"\r\n\r\nconst config: EditorProps[\"options\"] = {\r\n  readOnly: true,\r\n  wordWrap: \"on\",\r\n  wrappingIndent: \"same\",\r\n  minimap: {\r\n    enabled: false,\r\n  },\r\n  lineHeight: 20,\r\n  lineNumbersMinChars: 5,\r\n  scrollBeyondLastLine: false,\r\n  hideCursorInOverviewRuler: true,\r\n  overviewRulerLanes: 0,\r\n  overviewRulerBorder: false,\r\n};\r\n\r\nexport default function DashboardOutput({showTimestamp}:{showTimestamp?: boolean}) {\r\n  const { id } = useParams();\r\n  const { data, isLoading, refetch } = useQuery<DashboardLog>(\r\n    `/dashboard/${id}/log`,\r\n    { enabled: !!id, refetchOnWindowFocus: false, refetchOnMount: true }\r\n  );\r\n\r\n  return (\r\n    <CodeEditor refetch={refetch}>\r\n      <BaseEditor\r\n        loading={isLoading}\r\n        options={{...config}}\r\n        value={ showTimestamp ? parseDashboardLog(data) : parseDashboardLogNoTimestamp(data)}\r\n      />\r\n    </CodeEditor>\r\n  );\r\n}\r\n"],"sourceRoot":""}