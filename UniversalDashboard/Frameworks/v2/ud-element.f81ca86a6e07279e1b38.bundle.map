{"version":3,"sources":["webpack://udmaterialize/./app/ud-element.jsx"],"names":["UdElement","state","hidden","str","substring","length","test","this","isGuid","props","id","pubSubToken","PubSub","subscribe","onIncomingEvent","bind","eventName","event","type","tag","$","parentElement","remove","setState","unsubscribe","UDElementContent","key","React","Component","content","attributes","events","loading","hasError","errorMessage","fetchGet","data","error","message","info","hasCallback","loadData","js","getScript","getApiPath","e","val","target","value","checked","i","publish","eventId","eventData","preventUnregister","fetchPost","requestId","concat","elements","Array","refs","element","selectedOptions","item","isNaN","push","JSON","stringify","component","renderComponent","componentName","history","children","map","x","onUserEvent","onChange","onTextboxChanged","onCheckboxChanged","ref","createElement","timeout","refreshInterval","enabled","autoRefresh","callback"],"mappings":"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","file":"ud-element.f81ca86a6e07279e1b38.bundle.js","sourcesContent":["import React from 'react';\r\nimport renderComponent from './services/render-service.jsx';\r\nimport PubSub from 'pubsub-js';\r\nimport { fetchGet, fetchPost } from './services/fetch-service.jsx';\r\nimport { getApiPath } from './config.jsx';\r\nimport ReactInterval from 'react-interval';\r\nimport $ from 'jquery';\r\nimport LazyElement from './basics/lazy-element.jsx';\r\n\r\nexport default class UdElement extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hidden: false\r\n        }\r\n    }\r\n\r\n    isGuid(str) {\r\n        if (str == null) { return false }\r\n\r\n        if (str[0] === \"{\") {\r\n            str = str.substring(1, str.length - 1);\r\n        }\r\n        var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(str);\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!this.isGuid(this.props.id)) {\r\n            this.pubSubToken = PubSub.subscribe(this.props.id, this.onIncomingEvent.bind(this));\r\n        }\r\n    }\r\n\r\n    onIncomingEvent(eventName, event) {\r\n        if (event.type === \"removeElement\") {\r\n            if (this.props.tag == 'input') {\r\n                let inputComp = $(`#${this.props.id}`)\r\n                inputComp[0].parentElement.remove()\r\n            }\r\n            this.setState({\r\n                hidden: true\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.hidden && this.pubSubToken != null) {\r\n            PubSub.unsubscribe(this.pubSubToken);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.pubSubToken != null) {\r\n            PubSub.unsubscribe(this.pubSubToken);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hidden) {\r\n            return null;\r\n        }\r\n        return <UDElementContent key={this.props.id} {...this.props} />\r\n    }\r\n}\r\n\r\nclass UDElementContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: props.content,\r\n            tag: props.tag,\r\n            attributes: props.attributes,\r\n            events: props.events,\r\n            loading: true,\r\n            hasError: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    loadData() {\r\n        fetchGet(\"/api/internal/component/element/\" + this.props.id, function (data) {\r\n            if (data.error) {\r\n                this.setState({\r\n                    hasError: true,\r\n                    errorMessage: data.error.message\r\n                })\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                content: data,\r\n                loading: false\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true, errorMessage: error.message });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.pubSubToken = PubSub.subscribe(this.props.id, this.onIncomingEvent.bind(this));\r\n        if (this.props.hasCallback) {\r\n            this.loadData();\r\n        }\r\n        else {\r\n            if (this.props.js) {\r\n                $.getScript(getApiPath() + \"/api/internal/javascript/\" + this.props.js, function () {\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }.bind(this));\r\n            }\r\n            else {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onTextboxChanged(e) {\r\n        var val = e.target.value;\r\n        this.state.attributes.value = val;\r\n\r\n        this.setState({\r\n            attributes: this.state.attributes\r\n        });\r\n    }\r\n\r\n    onCheckboxChanged(e) {\r\n        var val = e.target.value;\r\n        val = e.target.checked;\r\n        this.state.attributes.checked = val;\r\n\r\n        this.setState({\r\n            attributes: this.state.attributes\r\n        });\r\n\r\n        for (var i = 0; i < this.state.events.length; i++) {\r\n            if (this.state.events[i].event === 'onChange') {\r\n\r\n                var event = this.state.events[i];\r\n\r\n                PubSub.publish('element-event', {\r\n                    type: \"clientEvent\",\r\n                    eventId: event.id,\r\n                    eventName: 'onChange',\r\n                    eventData: val\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (!this.props.preventUnregister) {\r\n            if (this.state.events != null) {\r\n                for (var i = 0; i < this.state.events.length; i++) {\r\n                    PubSub.publish('element-event', {\r\n                        type: \"unregisterEvent\",\r\n                        eventId: this.state.events[i].id\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (this.props.hasCallback) {\r\n                PubSub.publish('element-event', {\r\n                    type: \"unregisterEvent\",\r\n                    eventId: this.props.id\r\n                });\r\n            }\r\n        }\r\n\r\n        PubSub.unsubscribe(this.pubSubToken);\r\n    }\r\n\r\n    onIncomingEvent(eventName, event) {\r\n        if (event.type === \"setState\") {\r\n            this.setState(event.state);\r\n        }\r\n        else if (event.type === \"requestState\") {\r\n            fetchPost(`/api/internal/component/element/sessionState/${event.requestId}`, this.state);\r\n        } else if (event.type === \"removeElement\") {\r\n\r\n            this.setState({\r\n                hidden: true\r\n            })\r\n        } else if (event.type === \"addElement\") {\r\n\r\n            var content = this.state.content;\r\n            if (content == null) {\r\n                content = []\r\n            }\r\n\r\n            content = content.concat(event.elements);\r\n\r\n            this.setState({\r\n                content\r\n            })\r\n        } else if (event.type === \"clearElement\") {\r\n            this.setState({\r\n                content: null\r\n            })\r\n        } else if (event.type === \"syncElement\") {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    onUserEvent(event, e) {\r\n        var eventName = null;\r\n        var val = null;\r\n        if (this.state.tag === 'select') {\r\n\r\n            val = new Array();\r\n\r\n            if (this.refs.element.selectedOptions) {\r\n                for (var item in this.refs.element.selectedOptions) {\r\n                    if (isNaN(item)) continue;\r\n                    var value = this.refs.element.selectedOptions[item].value;\r\n                    val.push(value);\r\n                }\r\n            }\r\n            else {\r\n                val.push(this.refs.element.value);\r\n            }\r\n\r\n            if (val.length === 1) {\r\n                val = val[0]\r\n            }\r\n            else {\r\n                val = JSON.stringify(val);\r\n            }\r\n\r\n            for (var i = 0; i < this.state.events.length; i++) {\r\n                if (this.state.events[i].event === 'onChange') {\r\n                    event = this.state.events[i];\r\n                }\r\n            }\r\n            eventName = 'onChange'\r\n        }\r\n        else {\r\n            eventName = event.event;\r\n            val = e.target.value;\r\n            if (val != null && val.checked != null) {\r\n                val = e.target.checked;\r\n            }\r\n        }\r\n\r\n        this.state.attributes.value = val;\r\n        this.setState(this.state);\r\n\r\n        PubSub.publish('element-event', {\r\n            type: \"clientEvent\",\r\n            eventId: event.id,\r\n            eventName: eventName,\r\n            eventData: val\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hidden) {\r\n            return null;\r\n        }\r\n\r\n        if (this.state.hasError) {\r\n            return <LazyElement component={{\r\n                type: 'error',\r\n                message: this.state.errorMessage\r\n            }} />\r\n        }\r\n\r\n        if (this.props.error) {\r\n            return <LazyElement component={{\r\n                type: 'error',\r\n                message: this.state.errorMessage\r\n            }} />\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            return <div></div>\r\n        }\r\n\r\n        if (this.props.js) {\r\n            return renderComponent({\r\n                type: this.props.componentName,\r\n                ...this.props.props\r\n            }, this.props.history)\r\n        }\r\n\r\n        var children = null;\r\n\r\n        if (this.state.content && this.state.content.map) {\r\n            children = this.state.content.map(function (x) {\r\n                if (x.type != null) {\r\n                    return renderComponent(x, this.props.history);\r\n                }\r\n                return x;\r\n            }.bind(this));\r\n        }\r\n        else if (this.state.content) {\r\n            children = renderComponent(this.state.content, this.props.history);\r\n        }\r\n\r\n        var attributes = this.state.attributes;\r\n\r\n        if (attributes == null) {\r\n            attributes = {}\r\n        }\r\n\r\n        if (attributes.id == null) {\r\n            attributes.id = this.props.id;\r\n        }\r\n\r\n        if (this.state.events != null && this.state.events.map) {\r\n            this.state.events.map(function (event) {\r\n                attributes[event.event] = function (e) {\r\n                    this.onUserEvent(event, e);\r\n                }.bind(this);\r\n                return null;\r\n            }.bind(this));\r\n        }\r\n\r\n        if (this.state.tag === \"input\") {\r\n            if (attributes.type === \"text\" || attributes.type === \"password\") {\r\n                attributes.onChange = this.onTextboxChanged.bind(this);\r\n            }\r\n\r\n            if (attributes.type === \"checkbox\") {\r\n                attributes.onChange = this.onCheckboxChanged.bind(this);\r\n            }\r\n        }\r\n\r\n        if (this.state.tag === \"textarea\") {\r\n            attributes.onChange = this.onTextboxChanged.bind(this);\r\n        }\r\n\r\n        attributes.ref = 'element';\r\n        attributes.key = this.props.id;\r\n\r\n        const element = React.createElement(this.state.tag, attributes, children);\r\n\r\n        return [element,\r\n        <ReactInterval timeout={this.props.refreshInterval * 1000} enabled={this.props.autoRefresh} callback={this.loadData.bind(this)} />];\r\n    }\r\n}\r\n"],"sourceRoot":""}